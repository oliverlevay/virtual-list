{"version":3,"sources":["Components/NightThemeButton.js","Library/color.js","Library/Cookies.js","Library/Api.js","App.js","serviceWorker.js","index.js"],"names":["NightThemeButton","onClick","className","type","defaultChecked","color","colorCode","dark","setCookie","name","value","days","expires","date","Date","setTime","getTime","toUTCString","document","cookie","getCookie","nameEQ","ca","split","i","length","c","charAt","substring","indexOf","Api","this","basePath","token","refreshToken","ValidateToken","message","console","log","UseRefreshToken","method","url","data","requestUrl","Promise","resolve","reject","xhr","XMLHttpRequest","open","onload","response","onerror","status","statusText","setRequestHeader","send","JSON","stringify","GetResponse","parse","listId","path","itemId","itemName","itemDescription","emailOrUsername","password","includes","email","username","success","displayName","userName","userId","Body","styled","div","props","darkMode","NightThemeButtonContainer","Content","Information","InputAndTextContainer","Input","input","failed","Text","Button","button","RowContainer","ErrorMessage","App","useState","setDarkMode","loggingIn","setLoggingIn","registering","setRegistering","loggedIn","setLoggedIn","setUsername","usernameFailed","setUsernameFailed","setPassword","passwordFailed","setPasswordFailed","password2","setPassword2","setEmail","api","setApi","error","setError","login","a","Login","loginResponse","now","loggedInUpdater","register","alert","CreateUser","result","onChange","event","target","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e172eccb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./NightThemeButton.css\";\r\n\r\nconst NightThemeButton = ({ onClick }) => {\r\n  return (\r\n    <label className=\"switch\">\r\n      <input type=\"checkbox\" defaultChecked={true} onClick={onClick}></input>\r\n      <span className=\"slider round\"></span>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default NightThemeButton;\r\n","const color = (colorCode, dark = true) => {\r\n  if (dark) {\r\n    switch (colorCode) {\r\n      case \"primary\":\r\n        return \"#2196f3\";\r\n      case \"primary2\":\r\n        return \"#0b7dda\";\r\n      case \"background\":\r\n        return \"#1A1A1B\";\r\n      case \"background2\":\r\n        return \"#596273\";\r\n      case \"error\":\r\n        return \"#ea0027\";\r\n      default:\r\n        break;\r\n    }\r\n  } else {\r\n    switch (colorCode) {\r\n      case \"primary\":\r\n        return \"#2196f3\";\r\n      case \"primary2\":\r\n        return \"#0b7dda\";\r\n      case \"background\":\r\n        return \"#ffffff\";\r\n      case \"background2\":\r\n        return \"#ffffff\";\r\n      case \"error\":\r\n        return \"#ea0027\";\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n};\r\n\r\nexport default color;\r\n","function setCookie(name, value, days) {\r\n  var expires = \"\";\r\n  if (days) {\r\n    var date = new Date();\r\n    date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\r\n    expires = \"; expires=\" + date.toUTCString();\r\n  }\r\n  document.cookie = name + \"=\" + (value || \"\") + expires + \"; path=/\";\r\n}\r\nfunction getCookie(name) {\r\n  var nameEQ = name + \"=\";\r\n  var ca = document.cookie.split(\";\");\r\n  for (var i = 0; i < ca.length; i++) {\r\n    var c = ca[i];\r\n    while (c.charAt(0) == \" \") c = c.substring(1, c.length);\r\n    if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\r\n  }\r\n  return null;\r\n}\r\nfunction eraseCookie(name) {\r\n  document.cookie = name + \"=; Max-Age=-99999999;\";\r\n}\r\n\r\nexport { setCookie, getCookie };\r\n","import { getCookie, setCookie } from \"./Cookies\";\r\nexport class Api {\r\n  constructor() {\r\n    this.basePath = \"https://warm-plateau-84344.herokuapp.com/\";\r\n    this.token = getCookie(\"token\");\r\n    this.refreshToken = getCookie(\"refreshToken\");\r\n  }\r\n\r\n  async GetIsAuthorized() {\r\n    try {\r\n      if (this.token) {\r\n        if ((await this.ValidateToken()).message) {\r\n          return true;\r\n        } else {\r\n          console.log(\"Refresh token has been used\");\r\n          console.log(await this.UseRefreshToken());\r\n          return false;\r\n        }\r\n      } else {\r\n        return false;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async GetResponse(method, url, data = null) {\r\n    var requestUrl = this.basePath + url;\r\n    var token = this.token;\r\n    return new Promise(function (resolve, reject) {\r\n      let xhr = new XMLHttpRequest();\r\n      xhr.open(method, requestUrl);\r\n      xhr.onload = function () {\r\n        resolve(xhr.response);\r\n      };\r\n      xhr.onerror = function () {\r\n        reject({\r\n          status: this.status,\r\n          statusText: xhr.statusText,\r\n        });\r\n      };\r\n      if (token) {\r\n        xhr.setRequestHeader(\"Authorization\", \"bearer \" + token);\r\n      }\r\n      if (data != null) {\r\n        xhr.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\r\n        xhr.send(JSON.stringify(data));\r\n      } else {\r\n        xhr.send();\r\n      }\r\n    });\r\n  }\r\n\r\n  async GetUserLists() {\r\n    var path = \"user/lists\";\r\n    return JSON.parse(await this.GetResponse(\"GET\", path));\r\n  }\r\n\r\n  async GetListContent(listId) {\r\n    var path = \"listitems?listId=\" + listId;\r\n    return JSON.parse(await this.GetResponse(\"GET\", path));\r\n  }\r\n\r\n  async ValidateToken() {\r\n    var path = \"token/validate\";\r\n    return JSON.parse(await this.GetResponse(\"GET\", path));\r\n  }\r\n\r\n  async UseRefreshToken() {\r\n    var path = \"user/token/refresh\";\r\n    return JSON.parse(\r\n      await this.GetResponse(\"POST\", path, { refreshToken: this.refreshToken })\r\n    );\r\n  }\r\n\r\n  async DeleteListItem(listId, itemId) {\r\n    var path = \"listitems?listId=\" + listId + \"&itemId=\" + itemId;\r\n    return JSON.parse(await this.GetResponse(\"DELETE\", path));\r\n  }\r\n\r\n  async AddListItem(listId, itemName, itemDescription) {\r\n    var path = \"listitems\";\r\n    return JSON.parse(\r\n      await this.GetResponse(\"POST\", path, {\r\n        listId: listId,\r\n        itemName: itemName,\r\n        itemDescription: itemDescription,\r\n      })\r\n    );\r\n  }\r\n\r\n  async Login(emailOrUsername, password) {\r\n    try {\r\n      var data = null;\r\n\r\n      if (emailOrUsername.includes(\"@\")) {\r\n        data = { email: emailOrUsername, username: \"\", password: password };\r\n      } else {\r\n        data = { email: \"\", username: emailOrUsername, password: password };\r\n      }\r\n\r\n      var path = \"user/token\";\r\n      return JSON.parse(await this.GetResponse(\"POST\", path, data));\r\n    } catch (e) {\r\n      return {\r\n        success: false,\r\n        message: \"Unknown communication error when trying to perform login\",\r\n      };\r\n    }\r\n  }\r\n\r\n  async CreateUser(email, username, displayName, password) {\r\n    var path = \"user/create\";\r\n    var data = {\r\n      email: email,\r\n      username: username,\r\n      displayName: displayName,\r\n      password: password,\r\n    };\r\n\r\n    return JSON.parse(await this.GetResponse(\"POST\", path, data));\r\n  }\r\n\r\n  async GetUserIdByUserName(userName) {\r\n    var path = \"userid/?userName=\" + userName;\r\n\r\n    return JSON.parse(await this.GetResponse(\"GET\", path));\r\n  }\r\n\r\n  async ShareList(listId, userId) {\r\n    var path = \"list/share\";\r\n    var data = { listId: listId, userId: userId };\r\n\r\n    return JSON.parse(await this.GetResponse(\"POST\", path, data));\r\n  }\r\n}\r\n\r\nexport default Api;\r\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport NightThemeButton from \"./Components/NightThemeButton\";\nimport color from \"./Library/color\";\nimport Api from \"./Library/Api\";\nimport { setCookie } from \"./Library/Cookies\";\n\nconst Body = styled.div`\n  display: flex;\n  flex: 1;\n  min-height: 100vh;\n  background-color: ${(props) => color(\"background\", props.darkMode)};\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst NightThemeButtonContainer = styled.div`\n  display: flex;\n  position: absolute;\n  top: 1em;\n  right: 1em;\n  flex-direction: row;\n`;\n\nconst Content = styled.div`\n  display: flex;\n`;\n\nconst Information = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: ${(props) => color(\"background\", props.darkMode)};\n  padding: 1em;\n  margin: 1em 0;\n  min-width: 15em;\n  border-radius: 5px;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\n`;\n\nconst InputAndTextContainer = styled.div`\n  margin: 0.5em 0;\n`;\n\nconst Input = styled.input`\n  display: flex;\n  border-width: 1px;\n  padding: 0.5em 0.25em;\n  width: 90%;\n  border-radius: 5px;\n  font-size: 1em;\n  background-color: ${(props) => color(\"background2\", props.darkMode)};\n  ${({ failed }) =>\n    failed &&\n    `\n  border-bottom-width: 2px;\n  border-bottom-color: ${color(\"error\")};\n  `}\n`;\n\nconst Text = styled.div`\n  color: ${(props) => color(\"primary\", props.darkMode)};\n  font-family: \"Open Sans\", sans-serif;\n  font-style: normal;\n  font-size: 1.5em;\n  margin-bottom: 0.5em;\n  margin-right: 0.5em;\n`;\n\nconst Button = styled.button`\n  display: inline-block;\n  text-align: center;\n  background-color: ${(props) => color(\"primary\", props.darkMode)};\n  color: #ffffff;\n  font-family: \"Open Sans\", sans-serif;\n  font-style: normal;\n  font-size: 1.5em;\n  margin: 0.5em 0;\n  padding: 0.5em;\n  border: none;\n  :focus {\n    background-color: ${(props) => color(\"primary2\", props.darkMode)};\n    outline: none;\n  }\n  :hover {\n    background-color: ${(props) => color(\"primary2\", props.darkMode)};\n  }\n`;\n\nconst RowContainer = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n`;\n\nconst ErrorMessage = styled.div`\n  color: ${color(\"error\")};\n`;\n\nconst App = () => {\n  const [darkMode, setDarkMode] = useState(true);\n  const [loggingIn, setLoggingIn] = useState(false);\n  const [registering, setRegistering] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [usernameFailed, setUsernameFailed] = useState(false);\n  const [password, setPassword] = useState(\"\");\n  const [passwordFailed, setPasswordFailed] = useState(false);\n  const [password2, setPassword2] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [api, setApi] = useState(new Api());\n  const [error, setError] = useState(\"\");\n\n  const login = async () => {\n    console.log(username, password);\n    var loginResponse = await api.Login(username, password);\n    if (loginResponse.success) {\n      setCookie(\"token\", loginResponse.token, 100);\n      setCookie(\"tokenDate\", Date.now(), 100);\n      setCookie(\"refreshToken\", loginResponse.refreshToken, 100);\n      setApi(new Api());\n      await loggedInUpdater();\n    } else {\n      setUsernameFailed(true);\n      setPasswordFailed(true);\n      setError(loginResponse.message);\n    }\n  };\n\n  const register = async () => {\n    if (password !== password2) {\n      alert(\"Passwords don't match\");\n      setPassword(\"\");\n      setPassword2(\"\");\n    }\n    if (!email.includes(\"@\") || !email.includes(\".\")) {\n      alert(\"That doesn't look like a valid email address\");\n      return;\n    }\n    var result = await api.CreateUser(email, username, username, password);\n\n    if (!result.success) {\n      alert(result.message);\n      return;\n    } else {\n      alert(\"successfully created user\");\n    }\n  };\n\n  const loggedInUpdater = () => {\n    setLoggedIn(true);\n    setLoggingIn(false);\n  };\n\n  return (\n    <Body darkMode={darkMode}>\n      <NightThemeButtonContainer>\n        <Text darkMode={darkMode}>Dark theme</Text>\n        <NightThemeButton\n          onClick={() => {\n            setDarkMode(!darkMode);\n          }}\n        ></NightThemeButton>\n      </NightThemeButtonContainer>\n\n      <Content>\n        {!loggingIn && !registering && !loggedIn && (\n          <div>\n            <Information darkMode={darkMode}>\n              <Button\n                darkMode={darkMode}\n                onClick={() => {\n                  setLoggingIn(true);\n                }}\n              >\n                login\n              </Button>\n              <Button\n                darkMode={darkMode}\n                onClick={() => {\n                  setRegistering(true);\n                }}\n              >\n                register\n              </Button>\n            </Information>\n          </div>\n        )}\n        {loggingIn && (\n          <div>\n            <Information darkMode={darkMode}>\n              <InputAndTextContainer>\n                <Text darkMode={darkMode}>email/username:</Text>\n                <Input\n                  darkMode={darkMode}\n                  value={username}\n                  failed={usernameFailed}\n                  onChange={(event) => setUsername(event.target.value)}\n                ></Input>\n              </InputAndTextContainer>\n              <InputAndTextContainer>\n                <Text darkMode={darkMode}>password:</Text>\n                <Input\n                  type=\"password\"\n                  darkMode={darkMode}\n                  value={password}\n                  failed={passwordFailed}\n                  onChange={(event) => setPassword(event.target.value)}\n                ></Input>\n              </InputAndTextContainer>\n              <ErrorMessage>{error}</ErrorMessage>\n            </Information>\n            <Information darkMode={darkMode}>\n              <RowContainer>\n                <Button\n                  darkMode={darkMode}\n                  onClick={() => {\n                    setLoggingIn(false);\n                  }}\n                >\n                  back\n                </Button>\n                <Button\n                  darkMode={darkMode}\n                  onClick={() => {\n                    login();\n                  }}\n                >\n                  login\n                </Button>\n              </RowContainer>\n            </Information>\n          </div>\n        )}\n        {registering && (\n          <div>\n            <Information darkMode={darkMode}>\n              <InputAndTextContainer>\n                <Text darkMode={darkMode}>email:</Text>\n                <Input\n                  darkMode={darkMode}\n                  value={email}\n                  onChange={(event) => setEmail(event.target.value)}\n                ></Input>\n              </InputAndTextContainer>\n              <InputAndTextContainer>\n                <Text darkMode={darkMode}>username:</Text>\n                <Input\n                  darkMode={darkMode}\n                  value={username}\n                  onChange={(event) => setUsername(event.target.value)}\n                ></Input>\n              </InputAndTextContainer>\n              <InputAndTextContainer>\n                <Text darkMode={darkMode}>password:</Text>\n                <Input\n                  type=\"password\"\n                  darkMode={darkMode}\n                  value={password}\n                  onChange={(event) => setPassword(event.target.value)}\n                ></Input>\n              </InputAndTextContainer>\n              <InputAndTextContainer>\n                <Text darkMode={darkMode}>repeat password:</Text>\n                <Input\n                  type=\"password\"\n                  darkMode={darkMode}\n                  value={password2}\n                  onChange={(event) => setPassword2(event.target.value)}\n                ></Input>\n              </InputAndTextContainer>\n            </Information>\n            <Information darkMode={darkMode}>\n              <RowContainer>\n                <Button\n                  darkMode={darkMode}\n                  onClick={() => {\n                    setRegistering(false);\n                  }}\n                >\n                  back\n                </Button>\n                <Button\n                  darkMode={darkMode}\n                  onClick={() => {\n                    register();\n                  }}\n                >\n                  register\n                </Button>\n              </RowContainer>\n            </Information>\n          </div>\n        )}\n        {loggedIn && <p>successfully logged in</p>}\n      </Content>\n    </Body>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}