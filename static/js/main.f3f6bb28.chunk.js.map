{"version":3,"sources":["Library/Color.js","Library/Cookies.js","Library/Api.js","Components/AddButton.js","App.js","serviceWorker.js","index.js"],"names":["Color","primary","primary2","background","background2","error","text","setCookie","name","value","days","expires","date","Date","setTime","getTime","toUTCString","document","cookie","getCookie","nameEQ","ca","split","i","length","c","charAt","substring","indexOf","deleteCookie","Api","this","basePath","token","refreshToken","ValidateToken","message","console","log","UseRefreshToken","method","url","data","requestUrl","Promise","resolve","reject","xhr","XMLHttpRequest","open","onload","response","onerror","status","statusText","setRequestHeader","send","JSON","stringify","GetResponse","parse","listName","listId","path","newName","itemId","itemName","itemDescription","emailOrUsername","password","includes","email","username","success","displayName","userName","userId","AddButton","width","height","color","xmlns","viewBox","d","fill","Body","styled","div","Content","Information","InputAndTextContainer","Input","input","failed","Text","Button","button","LogoutButton","LogoutButtonContainer","ErrorMessage","RenamingList","ListContainer","ListButton","OpenContextMenuButton","ListContextMenu","ContextMenu","ListContextMenuItem","MenuItem","ThreeDots","p","App","useState","loggingIn","setLoggingIn","registering","setRegistering","loggedIn","setLoggedIn","setUsername","usernameFailed","setUsernameFailed","setPassword","passwordFailed","setPasswordFailed","password2","setPassword2","setEmail","emailFailed","setEmailFailed","api","setError","emailError","setEmailError","lists","setLists","addingList","setAddingList","newListName","setNewListName","renameId","setRenameId","renameName","setRenameName","window","a","GetIsAuthorized","loadLists","login","Login","loginResponse","now","register","alert","CreateUser","result","addList","AddList","deleteList","DeleteList","GetUserLists","sort","b","listid","rename","RenameList","handleKeyPress","key","useEffect","getElementById","select","onClick","autoComplete","onChange","event","target","type","onKeyPress","map","list","id","onBlur","toString","listname","x","clientX","y","clientY","showMenu","position","openContextMenu","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.f3f6bb28.chunk.js","sourcesContent":["const Color = {\r\n  primary: \"#2196f3\",\r\n  primary2: \"#0b7dda\",\r\n  background: \"#ffffff\",\r\n  background2: \"#ffffff\",\r\n  error: \"#ea0027\",\r\n  text: \"black\",\r\n};\r\nexport default Color;\r\n","function setCookie(name, value, days) {\r\n  var expires = \"\";\r\n  if (days) {\r\n    var date = new Date();\r\n    date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\r\n    expires = \"; expires=\" + date.toUTCString();\r\n  }\r\n  document.cookie = name + \"=\" + (value || \"\") + expires + \"; path=/\";\r\n}\r\nfunction getCookie(name) {\r\n  var nameEQ = name + \"=\";\r\n  var ca = document.cookie.split(\";\");\r\n  for (var i = 0; i < ca.length; i++) {\r\n    var c = ca[i];\r\n    while (c.charAt(0) === \" \") c = c.substring(1, c.length);\r\n    if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\r\n  }\r\n  return null;\r\n}\r\nfunction deleteCookie(name) {\r\n  document.cookie = name + \"=; Max-Age=-99999999;\";\r\n}\r\n\r\nexport { setCookie, getCookie, deleteCookie };\r\n","import { getCookie } from \"./Cookies\";\r\nexport class Api {\r\n  constructor() {\r\n    this.basePath = \"https://warm-plateau-84344.herokuapp.com/\";\r\n    this.token = getCookie(\"token\");\r\n    this.refreshToken = getCookie(\"refreshToken\");\r\n  }\r\n\r\n  async GetIsAuthorized() {\r\n    try {\r\n      if (this.token) {\r\n        if ((await this.ValidateToken()).message) {\r\n          return true;\r\n        } else {\r\n          console.log(\"Refresh token has been used\");\r\n          console.log(await this.UseRefreshToken());\r\n          return false;\r\n        }\r\n      } else {\r\n        return false;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async GetResponse(method, url, data = null) {\r\n    this.token = getCookie(\"token\");\r\n    var requestUrl = this.basePath + url;\r\n    var token = this.token;\r\n    return new Promise(function (resolve, reject) {\r\n      let xhr = new XMLHttpRequest();\r\n      xhr.open(method, requestUrl);\r\n      xhr.onload = function () {\r\n        resolve(xhr.response);\r\n      };\r\n      xhr.onerror = function () {\r\n        reject({\r\n          status: this.status,\r\n          statusText: xhr.statusText,\r\n        });\r\n      };\r\n      if (token) {\r\n        xhr.setRequestHeader(\"Authorization\", \"bearer \" + token);\r\n      }\r\n      if (data != null) {\r\n        xhr.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\r\n        xhr.send(JSON.stringify(data));\r\n      } else {\r\n        xhr.send();\r\n      }\r\n    });\r\n  }\r\n\r\n  async GetUserLists() {\r\n    var path = \"user/lists\";\r\n    return JSON.parse(await this.GetResponse(\"GET\", path));\r\n  }\r\n  async AddList(listName) {\r\n    var path = \"user/lists\";\r\n    return JSON.parse(\r\n      await this.GetResponse(\"POST\", path, {\r\n        listName: listName,\r\n      })\r\n    );\r\n  }\r\n  async DeleteList(listId) {\r\n    var path = \"list/remove?listId=\" + listId;\r\n    return JSON.parse(await this.GetResponse(\"DELETE\", path));\r\n  }\r\n  async RenameList(listId, newName) {\r\n    var path = \"list/rename\";\r\n    return JSON.parse(\r\n      await this.GetResponse(\"POST\", path, {\r\n        listId: listId,\r\n        newName: newName,\r\n      })\r\n    );\r\n  }\r\n  async CloneList(listId, newName) {\r\n    var path = \"list/clone\";\r\n    return JSON.parse(\r\n      await this.GetResponse(\"POST\", path, {\r\n        listId: listId,\r\n        newName: newName,\r\n      })\r\n    );\r\n  }\r\n  async GetListContent(listId) {\r\n    var path = \"listitems?listId=\" + listId;\r\n    return JSON.parse(await this.GetResponse(\"GET\", path));\r\n  }\r\n\r\n  async ValidateToken() {\r\n    var path = \"token/validate\";\r\n    return JSON.parse(await this.GetResponse(\"GET\", path));\r\n  }\r\n\r\n  async UseRefreshToken() {\r\n    var path = \"user/token/refresh\";\r\n    return JSON.parse(\r\n      await this.GetResponse(\"POST\", path, { refreshToken: this.refreshToken })\r\n    );\r\n  }\r\n\r\n  async DeleteListItem(listId, itemId) {\r\n    var path = \"listitems?listId=\" + listId + \"&itemId=\" + itemId;\r\n    return JSON.parse(await this.GetResponse(\"DELETE\", path));\r\n  }\r\n\r\n  async AddListItem(listId, itemName, itemDescription) {\r\n    var path = \"listitems\";\r\n    return JSON.parse(\r\n      await this.GetResponse(\"POST\", path, {\r\n        listId: listId,\r\n        itemName: itemName,\r\n        itemDescription: itemDescription,\r\n      })\r\n    );\r\n  }\r\n\r\n  async Login(emailOrUsername, password) {\r\n    try {\r\n      var data = null;\r\n\r\n      if (emailOrUsername.includes(\"@\")) {\r\n        data = { email: emailOrUsername, username: \"\", password: password };\r\n      } else {\r\n        data = { email: \"\", username: emailOrUsername, password: password };\r\n      }\r\n\r\n      var path = \"user/token\";\r\n      return JSON.parse(await this.GetResponse(\"POST\", path, data));\r\n    } catch (e) {\r\n      return {\r\n        success: false,\r\n        message: \"Unknown communication error when trying to perform login\",\r\n      };\r\n    }\r\n  }\r\n\r\n  async CreateUser(email, username, displayName, password) {\r\n    var path = \"user/create\";\r\n    var data = {\r\n      email: email,\r\n      username: username,\r\n      displayName: displayName,\r\n      password: password,\r\n    };\r\n\r\n    return JSON.parse(await this.GetResponse(\"POST\", path, data));\r\n  }\r\n\r\n  async GetUserIdByUserName(userName) {\r\n    var path = \"userid/?userName=\" + userName;\r\n\r\n    return JSON.parse(await this.GetResponse(\"GET\", path));\r\n  }\r\n\r\n  async ShareList(listId, userId) {\r\n    var path = \"list/share\";\r\n    var data = { listId: listId, userId: userId };\r\n\r\n    return JSON.parse(await this.GetResponse(\"POST\", path, data));\r\n  }\r\n}\r\n\r\nexport default Api;\r\n","import React from \"react\";\r\n\r\nconst AddButton = ({ width, height, color }) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={width}\r\n      height={height}\r\n      viewBox=\"0 0 20 20\"\r\n    >\r\n      <title>add</title>\r\n      <path d=\"M16 9h-5V4H9v5H4v2h5v5h2v-5h5V9z\" fill={color} />\r\n    </svg>\r\n  );\r\n};\r\nexport default AddButton;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\r\nimport { showMenu } from \"react-contextmenu/modules/actions\";\r\n\r\nimport Color from \"./Library/Color\";\r\nimport Api from \"./Library/Api\";\r\nimport { setCookie, getCookie, deleteCookie } from \"./Library/Cookies\";\r\nimport AddButtonIcon from \"./Components/AddButton\";\r\n\r\nconst Body = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  min-height: 100vh;\r\n  background-color: ${Color.background};\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Information = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${Color.background};\r\n  margin: 0.5em 0;\r\n  width: 16em;\r\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n  padding: 1em;\r\n`;\r\n\r\nconst InputAndTextContainer = styled.div`\r\n  margin: 0.25em 0;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  color: ${Color.text};\r\n  display: flex;\r\n  border-width: 1px;\r\n  padding: 0.5em;\r\n  border-radius: 5px;\r\n  font-size: 1em;\r\n  width: 15em;\r\n  background-color: ${Color.background2};\r\n  ${({ failed }) =>\r\n    failed &&\r\n    `\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: ${Color.error};\r\n  `}\r\n`;\r\n\r\nconst Text = styled.div`\r\n  color: ${Color.primary};\r\n  font-family: \"Open Sans\", sans-serif;\r\n  font-style: normal;\r\n  font-size: 1.5em;\r\n  margin-bottom: 0.5em;\r\n  margin-right: 0.5em;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 100%;\r\n  display: inline-block;\r\n  text-align: center;\r\n  background-color: ${Color.primary};\r\n  color: #ffffff;\r\n  font-family: \"Open Sans\", sans-serif;\r\n  font-style: normal;\r\n  font-size: 1.5em;\r\n  margin: 0.25em 0;\r\n  padding: 0.5em;\r\n  border: none;\r\n  border-radius: 3px;\r\n  :focus {\r\n    background-color: ${Color.primary2};\r\n    outline: none;\r\n  }\r\n  :hover {\r\n    background-color: ${Color.primary2};\r\n  }\r\n`;\r\n\r\nconst LogoutButton = styled(Button)`\r\n  font-size: 1em;\r\n`;\r\n\r\nconst LogoutButtonContainer = styled.div`\r\n  display: flex;\r\n  position: absolute;\r\n  top: 1em;\r\n  left: 1em;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: ${Color.error};\r\n`;\r\n\r\nconst AddButton = styled.button`\r\n  display: flex;\r\n  align-self: center;\r\n  padding: 0;\r\n  border: 0;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst RenamingList = styled.input`\r\n  width: 100%;\r\n  display: inline-block;\r\n  text-align: center;\r\n  background-color: ${Color.primary};\r\n  color: #ffffff;\r\n  font-family: \"Open Sans\", sans-serif;\r\n  font-style: normal;\r\n  font-size: 1.5em;\r\n  margin: 0.25em 0;\r\n  padding: 0.5em 0;\r\n  border: none;\r\n  border-radius: 3px;\r\n`;\r\n\r\nconst ListContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst ListButton = styled(Button)`\r\n  border-top-right-radius: 0;\r\n  border-bottom-right-radius: 0;\r\n`;\r\n\r\nconst OpenContextMenuButton = styled(Button)`\r\n  display: flex;\r\n  width: 10%;\r\n  border-top-left-radius: 0;\r\n  border-bottom-left-radius: 0;\r\n  padding: 0;\r\n`;\r\n\r\nconst ListContextMenu = styled(ContextMenu)`\r\n  background-color: ${Color.background};\r\n  box-shadow: 0px 0px 6px 0px rgba(0, 0, 0, 0.75);\r\n`;\r\n\r\nconst ListContextMenuItem = styled(MenuItem)`\r\n  padding: 1em;\r\n  user-select: none;\r\n  cursor: pointer;\r\n  :hover {\r\n    background-color: ${Color.primary2};\r\n  }\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst ThreeDots = styled.p`\r\n  transform: rotate(90deg);\r\n  white-space: nowrap;\r\n  display: block;\r\n  margin: 0;\r\n  padding: 0.5em;\r\n`;\r\n\r\nconst App = () => {\r\n  const [loggingIn, setLoggingIn] = useState(false);\r\n  const [registering, setRegistering] = useState(false);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [usernameFailed, setUsernameFailed] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordFailed, setPasswordFailed] = useState(false);\r\n  const [password2, setPassword2] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailFailed, setEmailFailed] = useState(false);\r\n  const [api] = useState(new Api());\r\n  const [error, setError] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [lists, setLists] = useState(null);\r\n  const [addingList, setAddingList] = useState(false);\r\n  const [newListName, setNewListName] = useState(\"\");\r\n  const [renameId, setRenameId] = useState(null);\r\n  const [renameName, setRenameName] = useState(\"\");\r\n\r\n  window.onload = async function () {\r\n    if (await api.GetIsAuthorized()) {\r\n      await loadLists();\r\n      setLoggingIn(false);\r\n      setRegistering(false);\r\n      setLoggedIn(true);\r\n    }\r\n  };\r\n  const login = async () => {\r\n    console.log(username, password);\r\n    var loginResponse = await api.Login(username, password);\r\n    if (loginResponse.success) {\r\n      setCookie(\"token\", loginResponse.token, 100);\r\n      setCookie(\"tokenDate\", Date.now(), 100);\r\n      setCookie(\"refreshToken\", loginResponse.refreshToken, 100);\r\n      await loadLists();\r\n      setLoggingIn(false);\r\n      setRegistering(false);\r\n      setLoggedIn(true);\r\n    } else {\r\n      setUsernameFailed(true);\r\n      setPasswordFailed(true);\r\n      setError(loginResponse.message);\r\n    }\r\n  };\r\n  const register = async () => {\r\n    if (password !== password2) {\r\n      alert(\"Passwords don't match\");\r\n      setPassword(\"\");\r\n      setPassword2(\"\");\r\n    }\r\n    if (!email.includes(\"@\") || !email.includes(\".\")) {\r\n      setEmailError(\"That doesn't look like a valid email address\");\r\n      setEmailFailed(true);\r\n      return;\r\n    }\r\n    var result = await api.CreateUser(email, username, username, password);\r\n\r\n    if (!result.success) {\r\n      alert(result.message);\r\n      return;\r\n    } else {\r\n      alert(\"successfully created user\");\r\n    }\r\n  };\r\n  const addList = async () => {\r\n    var result = await api.AddList(newListName);\r\n    if (!result.success) {\r\n      alert(result.message);\r\n      return;\r\n    } else {\r\n      setNewListName(\"\");\r\n      setAddingList(false);\r\n      loadLists();\r\n    }\r\n  };\r\n  const deleteList = async (listId) => {\r\n    var result = await api.DeleteList(listId);\r\n    if (!result.success) {\r\n      alert(result.message);\r\n    }\r\n    loadLists();\r\n  };\r\n  const cloneList = async (listId, listName) => {\r\n    console.log(listId, listName);\r\n    var result = await api.CloneList(listId, listName);\r\n    if (!result.success) {\r\n      alert(result.message);\r\n    }\r\n    loadLists();\r\n  };\r\n  const loadLists = async () => {\r\n    var response = await api.GetUserLists();\r\n    if (response.success) {\r\n      setLists(\r\n        response.message.sort((a, b) => {\r\n          return a.listid - b.listid;\r\n        })\r\n      );\r\n    } else {\r\n      alert(\r\n        \"Fel när listor skölle laddas: \" +\r\n          response.message +\r\n          \"\\nTOKEN: \" +\r\n          getCookie(\"token\")\r\n      );\r\n    }\r\n  };\r\n  const cleanUpForms = () => {\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n    setUsernameFailed(false);\r\n    setPasswordFailed(false);\r\n    setError(\"\");\r\n  };\r\n  const logout = () => {\r\n    setLoggedIn(false);\r\n    setAddingList(false);\r\n    deleteCookie(\"token\");\r\n    deleteCookie(\"tokenDate\");\r\n    deleteCookie(\"refreshToken\");\r\n  };\r\n  const startRenaming = (listId, listName) => {\r\n    setRenameName(listName);\r\n    setRenameId(listId);\r\n  };\r\n\r\n  const rename = async () => {\r\n    var result = await api.RenameList(renameId, renameName);\r\n    if (!result.success) {\r\n      alert(result.message);\r\n    }\r\n    await loadLists();\r\n    setRenameId(null);\r\n  };\r\n\r\n  const handleKeyPress = (key) => {\r\n    if (key === \"Enter\") {\r\n      if (loggingIn) {\r\n        login();\r\n      }\r\n      if (registering) {\r\n        register();\r\n      }\r\n    }\r\n  };\r\n\r\n  const openContextMenu = (event, id) => {\r\n    const x = event.clientX;\r\n    const y = event.clientY;\r\n    console.log(x, y, event);\r\n    showMenu({\r\n      position: { x, y },\r\n      target: event.target,\r\n      id: id,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (renameId) {\r\n      document.getElementById(renameId).select();\r\n    }\r\n  }, [renameId]);\r\n\r\n  return (\r\n    <Body>\r\n      {loggedIn && (\r\n        <LogoutButtonContainer>\r\n          <LogoutButton onClick={logout}>sign out</LogoutButton>\r\n        </LogoutButtonContainer>\r\n      )}\r\n      <Content>\r\n        {!loggingIn && !registering && !loggedIn && (\r\n          <div>\r\n            <Information>\r\n              <Button\r\n                onClick={() => {\r\n                  setLoggingIn(true);\r\n                }}\r\n              >\r\n                login\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  setRegistering(true);\r\n                }}\r\n              >\r\n                register\r\n              </Button>\r\n            </Information>\r\n          </div>\r\n        )}\r\n        {loggingIn && (\r\n          <div>\r\n            <Information>\r\n              <InputAndTextContainer>\r\n                <Text>email/username:</Text>\r\n                <Input\r\n                  value={username}\r\n                  failed={usernameFailed}\r\n                  autoComplete=\"username\"\r\n                  onChange={(event) => setUsername(event.target.value)}\r\n                ></Input>\r\n              </InputAndTextContainer>\r\n              <InputAndTextContainer>\r\n                <Text>password:</Text>\r\n                <Input\r\n                  type=\"password\"\r\n                  value={password}\r\n                  failed={passwordFailed}\r\n                  autoComplete=\"password\"\r\n                  onChange={(event) => setPassword(event.target.value)}\r\n                  onKeyPress={(event) => handleKeyPress(event.key)}\r\n                ></Input>\r\n              </InputAndTextContainer>\r\n              <ErrorMessage>{error}</ErrorMessage>\r\n            </Information>\r\n            <Information>\r\n              <Button\r\n                onClick={() => {\r\n                  setLoggingIn(false);\r\n                  cleanUpForms();\r\n                }}\r\n              >\r\n                back\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                onClick={() => {\r\n                  login();\r\n                }}\r\n              >\r\n                login\r\n              </Button>\r\n            </Information>\r\n          </div>\r\n        )}\r\n        {registering && (\r\n          <>\r\n            <Information>\r\n              <InputAndTextContainer>\r\n                <Text>email:</Text>\r\n                <Input\r\n                  value={email}\r\n                  failed={emailFailed}\r\n                  onChange={(event) => setEmail(event.target.value)}\r\n                ></Input>\r\n                <ErrorMessage>{emailError}</ErrorMessage>\r\n              </InputAndTextContainer>\r\n              <InputAndTextContainer>\r\n                <Text>username:</Text>\r\n                <Input\r\n                  value={username}\r\n                  onChange={(event) => setUsername(event.target.value)}\r\n                ></Input>\r\n              </InputAndTextContainer>\r\n              <InputAndTextContainer>\r\n                <Text>password:</Text>\r\n                <Input\r\n                  type=\"password\"\r\n                  value={password}\r\n                  onChange={(event) => setPassword(event.target.value)}\r\n                ></Input>\r\n              </InputAndTextContainer>\r\n              <InputAndTextContainer>\r\n                <Text>repeat password:</Text>\r\n                <Input\r\n                  type=\"password\"\r\n                  value={password2}\r\n                  onChange={(event) => setPassword2(event.target.value)}\r\n                  onKeyPress={(event) => handleKeyPress(event.key)}\r\n                ></Input>\r\n              </InputAndTextContainer>\r\n            </Information>\r\n            <Information>\r\n              <Button\r\n                onClick={() => {\r\n                  setRegistering(false);\r\n                }}\r\n              >\r\n                back\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  register();\r\n                }}\r\n              >\r\n                register\r\n              </Button>\r\n            </Information>\r\n          </>\r\n        )}\r\n        {loggedIn && (\r\n          <>\r\n            {!addingList && (\r\n              <Information>\r\n                {lists &&\r\n                  lists.map((list) => (\r\n                    <>\r\n                      {renameId === list.listid && (\r\n                        <RenamingList\r\n                          id={renameId}\r\n                          value={renameName}\r\n                          onChange={(event) =>\r\n                            setRenameName(event.target.value)\r\n                          }\r\n                          onKeyPress={(event) => handleKeyPress(event.key)}\r\n                          onBlur={rename}\r\n                        ></RenamingList>\r\n                      )}\r\n                      {renameId !== list.listid && (\r\n                        <ContextMenuTrigger\r\n                          key={list.listid}\r\n                          id={list.listid.toString()}\r\n                        >\r\n                          <ListContainer>\r\n                            <ListButton>{list.listname}</ListButton>\r\n                            <OpenContextMenuButton\r\n                              onClick={(event) =>\r\n                                openContextMenu(event, list.listid.toString())\r\n                              }\r\n                            >\r\n                              <ThreeDots>...</ThreeDots>\r\n                            </OpenContextMenuButton>\r\n                          </ListContainer>\r\n                          <ListContextMenu id={list.listid.toString()}>\r\n                            <ListContextMenuItem\r\n                              onClick={() =>\r\n                                startRenaming(list.listid, list.listname)\r\n                              }\r\n                            >\r\n                              Rename\r\n                            </ListContextMenuItem>\r\n                            <ListContextMenuItem\r\n                              onClick={() => deleteList(list.listid)}\r\n                            >\r\n                              Delete\r\n                            </ListContextMenuItem>\r\n                          </ListContextMenu>\r\n                        </ContextMenuTrigger>\r\n                      )}\r\n                    </>\r\n                  ))}\r\n                <AddButton\r\n                  onClick={() => {\r\n                    setAddingList(true);\r\n                  }}\r\n                >\r\n                  <AddButtonIcon\r\n                    width=\"60\"\r\n                    height=\"60\"\r\n                    color={Color.primary}\r\n                  ></AddButtonIcon>\r\n                </AddButton>\r\n              </Information>\r\n            )}\r\n            {addingList && (\r\n              <Information>\r\n                <InputAndTextContainer>\r\n                  <Text>List name:</Text>\r\n                  <Input\r\n                    value={newListName}\r\n                    onChange={(event) => setNewListName(event.target.value)}\r\n                  ></Input>\r\n                  <Button\r\n                    onClick={() => {\r\n                      addList();\r\n                    }}\r\n                  >\r\n                    add\r\n                  </Button>\r\n                </InputAndTextContainer>\r\n              </Information>\r\n            )}\r\n          </>\r\n        )}\r\n      </Content>\r\n    </Body>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}