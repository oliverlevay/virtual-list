{"version":3,"sources":["Library/Color.js","Library/Cookies.js","Library/Api.js","Components/AddButton.js","App.js","serviceWorker.js","index.js"],"names":["Color","primary","primary2","background","background2","error","text","setCookie","name","value","days","expires","date","Date","setTime","getTime","toUTCString","document","cookie","getCookie","nameEQ","ca","split","i","length","c","charAt","substring","indexOf","deleteCookie","Api","this","basePath","token","refreshToken","ValidateToken","message","console","log","UseRefreshToken","method","url","data","requestUrl","Promise","resolve","reject","xhr","XMLHttpRequest","open","onload","response","onerror","status","statusText","setRequestHeader","send","JSON","stringify","GetResponse","parse","listName","listId","path","itemId","itemName","itemDescription","emailOrUsername","password","includes","email","username","success","displayName","userName","userId","AddButton","width","height","color","xmlns","viewBox","d","fill","Body","styled","div","Content","Information","InputAndTextContainer","Input","input","failed","Text","Button","button","LogoutButton","LogoutButtonContainer","ErrorMessage","ListContextMenu","ContextMenu","ListContextMenuItem","MenuItem","App","useState","loggingIn","setLoggingIn","registering","setRegistering","loggedIn","setLoggedIn","setUsername","usernameFailed","setUsernameFailed","setPassword","passwordFailed","setPasswordFailed","password2","setPassword2","setEmail","emailFailed","setEmailFailed","api","setError","emailError","setEmailError","lists","setLists","addingList","setAddingListItem","newListName","setNewListName","window","a","GetIsAuthorized","loadLists","login","Login","loginResponse","now","register","alert","CreateUser","result","addList","AddList","deleteList","DeleteList","GetUserLists","onClick","autoComplete","onChange","event","target","type","map","list","key","listid","id","toString","listname","foo","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a9f5fb93.chunk.js","sourcesContent":["const Color = {\r\n  primary: \"#2196f3\",\r\n  primary2: \"#0b7dda\",\r\n  background: \"#ffffff\",\r\n  background2: \"#ffffff\",\r\n  error: \"#ea0027\",\r\n  text: \"black\",\r\n};\r\nexport default Color;\r\n","function setCookie(name, value, days) {\r\n  var expires = \"\";\r\n  if (days) {\r\n    var date = new Date();\r\n    date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\r\n    expires = \"; expires=\" + date.toUTCString();\r\n  }\r\n  document.cookie = name + \"=\" + (value || \"\") + expires + \"; path=/\";\r\n}\r\nfunction getCookie(name) {\r\n  var nameEQ = name + \"=\";\r\n  var ca = document.cookie.split(\";\");\r\n  for (var i = 0; i < ca.length; i++) {\r\n    var c = ca[i];\r\n    while (c.charAt(0) === \" \") c = c.substring(1, c.length);\r\n    if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\r\n  }\r\n  return null;\r\n}\r\nfunction deleteCookie(name) {\r\n  document.cookie = name + \"=; Max-Age=-99999999;\";\r\n}\r\n\r\nexport { setCookie, getCookie, deleteCookie };\r\n","import { getCookie } from \"./Cookies\";\r\nexport class Api {\r\n  constructor() {\r\n    this.basePath = \"https://warm-plateau-84344.herokuapp.com/\";\r\n    this.token = getCookie(\"token\");\r\n    this.refreshToken = getCookie(\"refreshToken\");\r\n  }\r\n\r\n  async GetIsAuthorized() {\r\n    try {\r\n      if (this.token) {\r\n        if ((await this.ValidateToken()).message) {\r\n          return true;\r\n        } else {\r\n          console.log(\"Refresh token has been used\");\r\n          console.log(await this.UseRefreshToken());\r\n          return false;\r\n        }\r\n      } else {\r\n        return false;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async GetResponse(method, url, data = null) {\r\n    this.token = getCookie(\"token\");\r\n    var requestUrl = this.basePath + url;\r\n    var token = this.token;\r\n    return new Promise(function (resolve, reject) {\r\n      let xhr = new XMLHttpRequest();\r\n      xhr.open(method, requestUrl);\r\n      xhr.onload = function () {\r\n        resolve(xhr.response);\r\n      };\r\n      xhr.onerror = function () {\r\n        reject({\r\n          status: this.status,\r\n          statusText: xhr.statusText,\r\n        });\r\n      };\r\n      if (token) {\r\n        xhr.setRequestHeader(\"Authorization\", \"bearer \" + token);\r\n      }\r\n      if (data != null) {\r\n        xhr.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\r\n        xhr.send(JSON.stringify(data));\r\n      } else {\r\n        xhr.send();\r\n      }\r\n    });\r\n  }\r\n\r\n  async GetUserLists() {\r\n    var path = \"user/lists\";\r\n    return JSON.parse(await this.GetResponse(\"GET\", path));\r\n  }\r\n  async AddList(listName) {\r\n    var path = \"user/lists\";\r\n    return JSON.parse(\r\n      await this.GetResponse(\"POST\", path, {\r\n        listName: listName,\r\n      })\r\n    );\r\n  }\r\n  async DeleteList(listId) {\r\n    var path = \"list/remove?listId=\" + listId;\r\n    return JSON.parse(await this.GetResponse(\"DELETE\", path));\r\n  }\r\n\r\n  async GetListContent(listId) {\r\n    var path = \"listitems?listId=\" + listId;\r\n    return JSON.parse(await this.GetResponse(\"GET\", path));\r\n  }\r\n\r\n  async ValidateToken() {\r\n    var path = \"token/validate\";\r\n    return JSON.parse(await this.GetResponse(\"GET\", path));\r\n  }\r\n\r\n  async UseRefreshToken() {\r\n    var path = \"user/token/refresh\";\r\n    return JSON.parse(\r\n      await this.GetResponse(\"POST\", path, { refreshToken: this.refreshToken })\r\n    );\r\n  }\r\n\r\n  async DeleteListItem(listId, itemId) {\r\n    var path = \"listitems?listId=\" + listId + \"&itemId=\" + itemId;\r\n    return JSON.parse(await this.GetResponse(\"DELETE\", path));\r\n  }\r\n\r\n  async AddListItem(listId, itemName, itemDescription) {\r\n    var path = \"listitems\";\r\n    return JSON.parse(\r\n      await this.GetResponse(\"POST\", path, {\r\n        listId: listId,\r\n        itemName: itemName,\r\n        itemDescription: itemDescription,\r\n      })\r\n    );\r\n  }\r\n\r\n  async Login(emailOrUsername, password) {\r\n    try {\r\n      var data = null;\r\n\r\n      if (emailOrUsername.includes(\"@\")) {\r\n        data = { email: emailOrUsername, username: \"\", password: password };\r\n      } else {\r\n        data = { email: \"\", username: emailOrUsername, password: password };\r\n      }\r\n\r\n      var path = \"user/token\";\r\n      return JSON.parse(await this.GetResponse(\"POST\", path, data));\r\n    } catch (e) {\r\n      return {\r\n        success: false,\r\n        message: \"Unknown communication error when trying to perform login\",\r\n      };\r\n    }\r\n  }\r\n\r\n  async CreateUser(email, username, displayName, password) {\r\n    var path = \"user/create\";\r\n    var data = {\r\n      email: email,\r\n      username: username,\r\n      displayName: displayName,\r\n      password: password,\r\n    };\r\n\r\n    return JSON.parse(await this.GetResponse(\"POST\", path, data));\r\n  }\r\n\r\n  async GetUserIdByUserName(userName) {\r\n    var path = \"userid/?userName=\" + userName;\r\n\r\n    return JSON.parse(await this.GetResponse(\"GET\", path));\r\n  }\r\n\r\n  async ShareList(listId, userId) {\r\n    var path = \"list/share\";\r\n    var data = { listId: listId, userId: userId };\r\n\r\n    return JSON.parse(await this.GetResponse(\"POST\", path, data));\r\n  }\r\n}\r\n\r\nexport default Api;\r\n","import React from \"react\";\r\n\r\nconst AddButton = ({ width, height, color }) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={width}\r\n      height={height}\r\n      viewBox=\"0 0 20 20\"\r\n    >\r\n      <title>add</title>\r\n      <path d=\"M16 9h-5V4H9v5H4v2h5v5h2v-5h5V9z\" fill={color} />\r\n    </svg>\r\n  );\r\n};\r\nexport default AddButton;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\r\n\r\nimport Color from \"./Library/Color\";\r\nimport Api from \"./Library/Api\";\r\nimport { setCookie, getCookie, deleteCookie } from \"./Library/Cookies\";\r\n\r\nimport AddButtonIcon from \"./Components/AddButton\";\r\n\r\nconst Body = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  min-height: 100vh;\r\n  background-color: ${Color.background};\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Information = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${Color.background};\r\n  margin: 0.5em 0;\r\n  width: 16em;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst InputAndTextContainer = styled.div`\r\n  margin: 0.25em 0;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  color: ${Color.text};\r\n  display: flex;\r\n  border-width: 1px;\r\n  padding: 0.5em;\r\n  border-radius: 5px;\r\n  font-size: 1em;\r\n  width: 15em;\r\n  background-color: ${Color.background2};\r\n  ${({ failed }) =>\r\n    failed &&\r\n    `\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: ${Color.error};\r\n  `}\r\n`;\r\n\r\nconst Text = styled.div`\r\n  color: ${Color.primary};\r\n  font-family: \"Open Sans\", sans-serif;\r\n  font-style: normal;\r\n  font-size: 1.5em;\r\n  margin-bottom: 0.5em;\r\n  margin-right: 0.5em;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  width: 100%;\r\n  display: inline-block;\r\n  text-align: center;\r\n  background-color: ${Color.primary};\r\n  color: #ffffff;\r\n  font-family: \"Open Sans\", sans-serif;\r\n  font-style: normal;\r\n  font-size: 1.5em;\r\n  margin: 0.25em 0;\r\n  padding: 0.5em;\r\n  border: none;\r\n  border-radius: 3px;\r\n  :focus {\r\n    background-color: ${Color.primary2};\r\n    outline: none;\r\n  }\r\n  :hover {\r\n    background-color: ${Color.primary2};\r\n  }\r\n`;\r\n\r\nconst LogoutButton = styled(Button)`\r\n  font-size: 1em;\r\n`;\r\n\r\nconst LogoutButtonContainer = styled.div`\r\n  display: flex;\r\n  position: absolute;\r\n  top: 1em;\r\n  left: 1em;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: ${Color.error};\r\n`;\r\n\r\nconst AddButton = styled.button`\r\n  display: flex;\r\n  align-self: center;\r\n  padding: 0;\r\n  border: 0;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst ListContextMenu = styled(ContextMenu)`\r\n  background-color: ${Color.background};\r\n  box-shadow: 0px 0px 6px 0px rgba(0, 0, 0, 0.75);\r\n`;\r\n\r\nconst ListContextMenuItem = styled(MenuItem)`\r\n  padding: 1em;\r\n  cursor: pointer;\r\n  :hover {\r\n    background-color: ${Color.primary2};\r\n  }\r\n  :focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst App = () => {\r\n  const [loggingIn, setLoggingIn] = useState(false);\r\n  const [registering, setRegistering] = useState(false);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [usernameFailed, setUsernameFailed] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordFailed, setPasswordFailed] = useState(false);\r\n  const [password2, setPassword2] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailFailed, setEmailFailed] = useState(false);\r\n  const [api] = useState(new Api());\r\n  const [error, setError] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [lists, setLists] = useState(null);\r\n  const [addingList, setAddingListItem] = useState(false);\r\n  const [newListName, setNewListName] = useState(\"\");\r\n\r\n  window.onload = async function () {\r\n    if (await api.GetIsAuthorized()) {\r\n      await loadLists();\r\n      setLoggingIn(false);\r\n      setRegistering(false);\r\n      setLoggedIn(true);\r\n    }\r\n  };\r\n\r\n  const login = async () => {\r\n    console.log(username, password);\r\n    var loginResponse = await api.Login(username, password);\r\n    if (loginResponse.success) {\r\n      setCookie(\"token\", loginResponse.token, 100);\r\n      setCookie(\"tokenDate\", Date.now(), 100);\r\n      setCookie(\"refreshToken\", loginResponse.refreshToken, 100);\r\n      await loadLists();\r\n      setLoggingIn(false);\r\n      setRegistering(false);\r\n      setLoggedIn(true);\r\n    } else {\r\n      setUsernameFailed(true);\r\n      setPasswordFailed(true);\r\n      setError(loginResponse.message);\r\n    }\r\n  };\r\n\r\n  const register = async () => {\r\n    if (password !== password2) {\r\n      alert(\"Passwords don't match\");\r\n      setPassword(\"\");\r\n      setPassword2(\"\");\r\n    }\r\n    if (!email.includes(\"@\") || !email.includes(\".\")) {\r\n      setEmailError(\"That doesn't look like a valid email address\");\r\n      setEmailFailed(true);\r\n      return;\r\n    }\r\n    var result = await api.CreateUser(email, username, username, password);\r\n\r\n    if (!result.success) {\r\n      alert(result.message);\r\n      return;\r\n    } else {\r\n      alert(\"successfully created user\");\r\n    }\r\n  };\r\n  const addList = async () => {\r\n    var result = await api.AddList(newListName);\r\n    if (!result.success) {\r\n      alert(result.message);\r\n      return;\r\n    } else {\r\n      setNewListName(\"\");\r\n      setAddingListItem(false);\r\n      loadLists();\r\n    }\r\n  };\r\n\r\n  const deleteList = async (listId) => {\r\n    var result = await api.DeleteList(listId);\r\n    if (!result.success) {\r\n      alert(result.message);\r\n      return;\r\n    } else {\r\n      loadLists();\r\n    }\r\n  };\r\n\r\n  const loadLists = async () => {\r\n    var response = await api.GetUserLists();\r\n    if (response.success) {\r\n      setLists(response.message);\r\n    } else {\r\n      alert(\r\n        \"Fel när listor skölle laddas: \" +\r\n          response.message +\r\n          \"\\nTOKEN: \" +\r\n          getCookie(\"token\")\r\n      );\r\n    }\r\n  };\r\n\r\n  const cleanUpForms = () => {\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n    setUsernameFailed(false);\r\n    setPasswordFailed(false);\r\n    setError(\"\");\r\n  };\r\n\r\n  const logout = () => {\r\n    setLoggedIn(false);\r\n    deleteCookie(\"token\");\r\n    deleteCookie(\"tokenDate\");\r\n    deleteCookie(\"refreshToken\");\r\n  };\r\n\r\n  return (\r\n    <Body>\r\n      <LogoutButtonContainer>\r\n        <LogoutButton onClick={logout}>sign out</LogoutButton>\r\n      </LogoutButtonContainer>\r\n      <Content>\r\n        {!loggingIn && !registering && !loggedIn && (\r\n          <div>\r\n            <Information>\r\n              <Button\r\n                onClick={() => {\r\n                  setLoggingIn(true);\r\n                }}\r\n              >\r\n                login\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  setRegistering(true);\r\n                }}\r\n              >\r\n                register\r\n              </Button>\r\n            </Information>\r\n          </div>\r\n        )}\r\n        {loggingIn && (\r\n          <div>\r\n            <Information>\r\n              <InputAndTextContainer>\r\n                <Text>email/username:</Text>\r\n                <Input\r\n                  value={username}\r\n                  failed={usernameFailed}\r\n                  autoComplete=\"username\"\r\n                  onChange={(event) => setUsername(event.target.value)}\r\n                ></Input>\r\n              </InputAndTextContainer>\r\n              <InputAndTextContainer>\r\n                <Text>password:</Text>\r\n                <Input\r\n                  type=\"password\"\r\n                  value={password}\r\n                  failed={passwordFailed}\r\n                  autoComplete=\"password\"\r\n                  onChange={(event) => setPassword(event.target.value)}\r\n                ></Input>\r\n              </InputAndTextContainer>\r\n              <ErrorMessage>{error}</ErrorMessage>\r\n            </Information>\r\n            <Information>\r\n              <Button\r\n                onClick={() => {\r\n                  setLoggingIn(false);\r\n                  cleanUpForms();\r\n                }}\r\n              >\r\n                back\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                onClick={() => {\r\n                  login();\r\n                }}\r\n              >\r\n                login\r\n              </Button>\r\n            </Information>\r\n          </div>\r\n        )}\r\n        {registering && (\r\n          <div>\r\n            <Information>\r\n              <InputAndTextContainer>\r\n                <Text>email:</Text>\r\n                <Input\r\n                  value={email}\r\n                  failed={emailFailed}\r\n                  onChange={(event) => setEmail(event.target.value)}\r\n                ></Input>\r\n                <ErrorMessage>{emailError}</ErrorMessage>\r\n              </InputAndTextContainer>\r\n              <InputAndTextContainer>\r\n                <Text>username:</Text>\r\n                <Input\r\n                  value={username}\r\n                  onChange={(event) => setUsername(event.target.value)}\r\n                ></Input>\r\n              </InputAndTextContainer>\r\n              <InputAndTextContainer>\r\n                <Text>password:</Text>\r\n                <Input\r\n                  type=\"password\"\r\n                  value={password}\r\n                  onChange={(event) => setPassword(event.target.value)}\r\n                ></Input>\r\n              </InputAndTextContainer>\r\n              <InputAndTextContainer>\r\n                <Text>repeat password:</Text>\r\n                <Input\r\n                  type=\"password\"\r\n                  value={password2}\r\n                  onChange={(event) => setPassword2(event.target.value)}\r\n                ></Input>\r\n              </InputAndTextContainer>\r\n            </Information>\r\n            <Information>\r\n              <Button\r\n                onClick={() => {\r\n                  setRegistering(false);\r\n                }}\r\n              >\r\n                back\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  register();\r\n                }}\r\n              >\r\n                register\r\n              </Button>\r\n            </Information>\r\n          </div>\r\n        )}\r\n        {loggedIn && !addingList && (\r\n          <Information>\r\n            {lists &&\r\n              lists.map((list) => (\r\n                <ContextMenuTrigger\r\n                  key={list.listid}\r\n                  id={list.listid.toString()}\r\n                >\r\n                  <Button>{list.listname}</Button>\r\n                  <ListContextMenu id={list.listid.toString()}>\r\n                    <ListContextMenuItem data={{ foo: \"bar\" }}>\r\n                      Rename\r\n                    </ListContextMenuItem>\r\n                    <ListContextMenuItem\r\n                      onClick={() => deleteList(list.listid)}\r\n                    >\r\n                      Delete\r\n                    </ListContextMenuItem>\r\n                    <ListContextMenuItem data={{ foo: \"bar\" }}>\r\n                      Favorite\r\n                    </ListContextMenuItem>\r\n                  </ListContextMenu>\r\n                </ContextMenuTrigger>\r\n              ))}\r\n            <AddButton\r\n              onClick={() => {\r\n                setAddingListItem(true);\r\n              }}\r\n            >\r\n              <AddButtonIcon\r\n                width=\"60\"\r\n                height=\"60\"\r\n                color={Color.primary}\r\n              ></AddButtonIcon>\r\n            </AddButton>\r\n          </Information>\r\n        )}\r\n        {loggedIn && addingList && (\r\n          <Information>\r\n            <InputAndTextContainer>\r\n              <Text>List name:</Text>\r\n              <Input\r\n                value={newListName}\r\n                onChange={(event) => setNewListName(event.target.value)}\r\n              ></Input>\r\n              <Button\r\n                onClick={() => {\r\n                  addList();\r\n                }}\r\n              ></Button>\r\n            </InputAndTextContainer>\r\n          </Information>\r\n        )}\r\n      </Content>\r\n    </Body>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}