{"version":3,"sources":["Components/NightThemeButton.js","Library/color.js","Library/Cookies.js","Library/Api.js","Components/AddButton.js","App.js","serviceWorker.js","index.js"],"names":["NightThemeButton","defaultChecked","onClick","className","type","color","colorCode","dark","setCookie","name","value","days","expires","date","Date","setTime","getTime","toUTCString","document","cookie","getCookie","nameEQ","ca","split","i","length","c","charAt","substring","indexOf","Api","this","basePath","token","refreshToken","ValidateToken","message","console","log","UseRefreshToken","method","url","data","requestUrl","Promise","resolve","reject","xhr","XMLHttpRequest","open","onload","response","onerror","status","statusText","setRequestHeader","send","JSON","stringify","GetResponse","parse","listName","listId","path","itemId","itemName","itemDescription","emailOrUsername","password","includes","email","username","success","displayName","userName","userId","AddButton","width","height","xmlns","viewBox","d","fill","Body","styled","div","props","darkMode","NightThemeButtonContainer","Content","Information","InputAndTextContainer","Input","input","failed","Text","Button","button","ErrorMessage","App","useState","setDarkMode","loggingIn","setLoggingIn","registering","setRegistering","loggedIn","setLoggedIn","setUsername","usernameFailed","setUsernameFailed","setPassword","passwordFailed","setPasswordFailed","password2","setPassword2","setEmail","emailFailed","setEmailFailed","api","error","setError","emailError","setEmailError","lists","setLists","addingList","setAddingListItem","newListName","setNewListName","window","a","GetIsAuthorized","loadLists","login","Login","loginResponse","now","register","alert","CreateUser","result","addList","AddList","GetUserLists","autoComplete","onChange","event","target","map","list","key","listid","listname","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.54be76c0.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./NightThemeButton.css\";\r\n\r\nconst NightThemeButton = ({ defaultChecked, onClick }) => {\r\n  return (\r\n    <label className=\"switch\">\r\n      <input\r\n        type=\"checkbox\"\r\n        defaultChecked={defaultChecked}\r\n        onClick={onClick}\r\n      ></input>\r\n      <span className=\"slider round\"></span>\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default NightThemeButton;\r\n","const color = (colorCode, dark = true) => {\r\n  if (dark) {\r\n    switch (colorCode) {\r\n      case \"primary\":\r\n        return \"#2196f3\";\r\n      case \"primary2\":\r\n        return \"#0b7dda\";\r\n      case \"background\":\r\n        return \"#1A1A1B\";\r\n      case \"background2\":\r\n        return \"#596273\";\r\n      case \"error\":\r\n        return \"#ea0027\";\r\n      case \"text\":\r\n        return \"white\";\r\n      default:\r\n        break;\r\n    }\r\n  } else {\r\n    switch (colorCode) {\r\n      case \"primary\":\r\n        return \"#2196f3\";\r\n      case \"primary2\":\r\n        return \"#0b7dda\";\r\n      case \"background\":\r\n        return \"#ffffff\";\r\n      case \"background2\":\r\n        return \"#ffffff\";\r\n      case \"error\":\r\n        return \"#ea0027\";\r\n      case \"text\":\r\n        return \"black\";\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n};\r\n\r\nexport default color;\r\n","function setCookie(name, value, days) {\r\n  var expires = \"\";\r\n  if (days) {\r\n    var date = new Date();\r\n    date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\r\n    expires = \"; expires=\" + date.toUTCString();\r\n  }\r\n  document.cookie = name + \"=\" + (value || \"\") + expires + \"; path=/\";\r\n}\r\nfunction getCookie(name) {\r\n  var nameEQ = name + \"=\";\r\n  var ca = document.cookie.split(\";\");\r\n  for (var i = 0; i < ca.length; i++) {\r\n    var c = ca[i];\r\n    while (c.charAt(0) === \" \") c = c.substring(1, c.length);\r\n    if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\r\n  }\r\n  return null;\r\n}\r\nfunction eraseCookie(name) {\r\n  document.cookie = name + \"=; Max-Age=-99999999;\";\r\n}\r\n\r\nexport { setCookie, getCookie };\r\n","import { getCookie } from \"./Cookies\";\r\nexport class Api {\r\n  constructor() {\r\n    this.basePath = \"https://warm-plateau-84344.herokuapp.com/\";\r\n    this.token = getCookie(\"token\");\r\n    this.refreshToken = getCookie(\"refreshToken\");\r\n  }\r\n\r\n  async GetIsAuthorized() {\r\n    try {\r\n      if (this.token) {\r\n        if ((await this.ValidateToken()).message) {\r\n          return true;\r\n        } else {\r\n          console.log(\"Refresh token has been used\");\r\n          console.log(await this.UseRefreshToken());\r\n          return false;\r\n        }\r\n      } else {\r\n        return false;\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  async GetResponse(method, url, data = null) {\r\n    this.token = getCookie(\"token\");\r\n    var requestUrl = this.basePath + url;\r\n    var token = this.token;\r\n    return new Promise(function (resolve, reject) {\r\n      let xhr = new XMLHttpRequest();\r\n      xhr.open(method, requestUrl);\r\n      xhr.onload = function () {\r\n        resolve(xhr.response);\r\n      };\r\n      xhr.onerror = function () {\r\n        reject({\r\n          status: this.status,\r\n          statusText: xhr.statusText,\r\n        });\r\n      };\r\n      if (token) {\r\n        xhr.setRequestHeader(\"Authorization\", \"bearer \" + token);\r\n      }\r\n      if (data != null) {\r\n        xhr.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\r\n        xhr.send(JSON.stringify(data));\r\n      } else {\r\n        xhr.send();\r\n      }\r\n    });\r\n  }\r\n\r\n  async GetUserLists() {\r\n    var path = \"user/lists\";\r\n    return JSON.parse(await this.GetResponse(\"GET\", path));\r\n  }\r\n  async AddList(listName) {\r\n    var path = \"user/lists\";\r\n    return JSON.parse(\r\n      await this.GetResponse(\"POST\", path, {\r\n        listName: listName,\r\n      })\r\n    );\r\n  }\r\n  async GetListContent(listId) {\r\n    var path = \"listitems?listId=\" + listId;\r\n    return JSON.parse(await this.GetResponse(\"GET\", path));\r\n  }\r\n\r\n  async ValidateToken() {\r\n    var path = \"token/validate\";\r\n    return JSON.parse(await this.GetResponse(\"GET\", path));\r\n  }\r\n\r\n  async UseRefreshToken() {\r\n    var path = \"user/token/refresh\";\r\n    return JSON.parse(\r\n      await this.GetResponse(\"POST\", path, { refreshToken: this.refreshToken })\r\n    );\r\n  }\r\n\r\n  async DeleteListItem(listId, itemId) {\r\n    var path = \"listitems?listId=\" + listId + \"&itemId=\" + itemId;\r\n    return JSON.parse(await this.GetResponse(\"DELETE\", path));\r\n  }\r\n\r\n  async AddListItem(listId, itemName, itemDescription) {\r\n    var path = \"listitems\";\r\n    return JSON.parse(\r\n      await this.GetResponse(\"POST\", path, {\r\n        listId: listId,\r\n        itemName: itemName,\r\n        itemDescription: itemDescription,\r\n      })\r\n    );\r\n  }\r\n\r\n  async Login(emailOrUsername, password) {\r\n    try {\r\n      var data = null;\r\n\r\n      if (emailOrUsername.includes(\"@\")) {\r\n        data = { email: emailOrUsername, username: \"\", password: password };\r\n      } else {\r\n        data = { email: \"\", username: emailOrUsername, password: password };\r\n      }\r\n\r\n      var path = \"user/token\";\r\n      return JSON.parse(await this.GetResponse(\"POST\", path, data));\r\n    } catch (e) {\r\n      return {\r\n        success: false,\r\n        message: \"Unknown communication error when trying to perform login\",\r\n      };\r\n    }\r\n  }\r\n\r\n  async CreateUser(email, username, displayName, password) {\r\n    var path = \"user/create\";\r\n    var data = {\r\n      email: email,\r\n      username: username,\r\n      displayName: displayName,\r\n      password: password,\r\n    };\r\n\r\n    return JSON.parse(await this.GetResponse(\"POST\", path, data));\r\n  }\r\n\r\n  async GetUserIdByUserName(userName) {\r\n    var path = \"userid/?userName=\" + userName;\r\n\r\n    return JSON.parse(await this.GetResponse(\"GET\", path));\r\n  }\r\n\r\n  async ShareList(listId, userId) {\r\n    var path = \"list/share\";\r\n    var data = { listId: listId, userId: userId };\r\n\r\n    return JSON.parse(await this.GetResponse(\"POST\", path, data));\r\n  }\r\n}\r\n\r\nexport default Api;\r\n","import React from \"react\";\r\n\r\nconst AddButton = ({ width, height, color }) => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width={width}\r\n      height={height}\r\n      viewBox=\"0 0 20 20\"\r\n    >\r\n      <title>add</title>\r\n      <path d=\"M16 9h-5V4H9v5H4v2h5v5h2v-5h5V9z\" fill={color} />\r\n    </svg>\r\n  );\r\n};\r\nexport default AddButton;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport NightThemeButton from \"./Components/NightThemeButton\";\r\nimport color from \"./Library/color\";\r\nimport Api from \"./Library/Api\";\r\nimport { setCookie, getCookie } from \"./Library/Cookies\";\r\nimport AddButtonIcon from \"./Components/AddButton\";\r\n\r\nconst Body = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  min-height: 100vh;\r\n  background-color: ${(props) => color(\"background\", props.darkMode)};\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst NightThemeButtonContainer = styled.div`\r\n  display: flex;\r\n  position: absolute;\r\n  top: 1em;\r\n  right: 1em;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nconst Information = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${(props) => color(\"background\", props.darkMode)};\r\n  margin: 0.5em 0;\r\n  width: 16em;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst InputAndTextContainer = styled.div`\r\n  margin: 0.25em 0;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  color: ${(props) => color(\"text\", props.darkMode)};\r\n  display: flex;\r\n  border-width: 1px;\r\n  padding: 0.5em;\r\n  border-radius: 5px;\r\n  font-size: 1em;\r\n  width: 15em;\r\n  background-color: ${(props) => color(\"background2\", props.darkMode)};\r\n  ${({ failed }) =>\r\n    failed &&\r\n    `\r\n  border-bottom-width: 2px;\r\n  border-bottom-color: ${color(\"error\")};\r\n  `}\r\n`;\r\n\r\nconst Text = styled.div`\r\n  color: ${(props) => color(\"primary\", props.darkMode)};\r\n  font-family: \"Open Sans\", sans-serif;\r\n  font-style: normal;\r\n  font-size: 1.5em;\r\n  margin-bottom: 0.5em;\r\n  margin-right: 0.5em;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  display: inline-block;\r\n  text-align: center;\r\n  background-color: ${(props) => color(\"primary\", props.darkMode)};\r\n  color: #ffffff;\r\n  font-family: \"Open Sans\", sans-serif;\r\n  font-style: normal;\r\n  font-size: 1.5em;\r\n  margin: 0.25em 0;\r\n  padding: 0.5em;\r\n  border: none;\r\n  :focus {\r\n    background-color: ${(props) => color(\"primary2\", props.darkMode)};\r\n    outline: none;\r\n  }\r\n  :hover {\r\n    background-color: ${(props) => color(\"primary2\", props.darkMode)};\r\n  }\r\n`;\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: ${color(\"error\")};\r\n`;\r\n\r\nconst AddButton = styled.button`\r\n  display: flex;\r\n  align-self: center;\r\n  padding: 0;\r\n`;\r\n\r\nconst App = () => {\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [loggingIn, setLoggingIn] = useState(false);\r\n  const [registering, setRegistering] = useState(false);\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [usernameFailed, setUsernameFailed] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [passwordFailed, setPasswordFailed] = useState(false);\r\n  const [password2, setPassword2] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [emailFailed, setEmailFailed] = useState(false);\r\n  const [api] = useState(new Api());\r\n  const [error, setError] = useState(\"\");\r\n  const [emailError, setEmailError] = useState(\"\");\r\n  const [lists, setLists] = useState(null);\r\n  const [addingList, setAddingListItem] = useState(false);\r\n  const [newListName, setNewListName] = useState(\"\");\r\n\r\n  window.onload = async function () {\r\n    if (await api.GetIsAuthorized()) {\r\n      await loadLists();\r\n      setLoggingIn(false);\r\n      setRegistering(false);\r\n      setLoggedIn(true);\r\n    }\r\n  };\r\n\r\n  const login = async () => {\r\n    console.log(username, password);\r\n    var loginResponse = await api.Login(username, password);\r\n    if (loginResponse.success) {\r\n      setCookie(\"token\", loginResponse.token, 100);\r\n      setCookie(\"tokenDate\", Date.now(), 100);\r\n      setCookie(\"refreshToken\", loginResponse.refreshToken, 100);\r\n      await loadLists();\r\n      setLoggingIn(false);\r\n      setRegistering(false);\r\n      setLoggedIn(true);\r\n    } else {\r\n      setUsernameFailed(true);\r\n      setPasswordFailed(true);\r\n      setError(loginResponse.message);\r\n    }\r\n  };\r\n\r\n  const register = async () => {\r\n    if (password !== password2) {\r\n      alert(\"Passwords don't match\");\r\n      setPassword(\"\");\r\n      setPassword2(\"\");\r\n    }\r\n    if (!email.includes(\"@\") || !email.includes(\".\")) {\r\n      setEmailError(\"That doesn't look like a valid email address\");\r\n      setEmailFailed(true);\r\n      return;\r\n    }\r\n    var result = await api.CreateUser(email, username, username, password);\r\n\r\n    if (!result.success) {\r\n      alert(result.message);\r\n      return;\r\n    } else {\r\n      alert(\"successfully created user\");\r\n    }\r\n  };\r\n  const addList = async () => {\r\n    var result = await api.AddList(newListName);\r\n    if (!result.success) {\r\n      alert(result.message);\r\n      return;\r\n    } else {\r\n      setNewListName(\"\");\r\n      setAddingListItem(false);\r\n      loadLists();\r\n    }\r\n  };\r\n\r\n  const loadLists = async () => {\r\n    var response = await api.GetUserLists();\r\n    if (response.success) {\r\n      setLists(response.message);\r\n    } else {\r\n      alert(\r\n        \"Fel när listor skölle laddas: \" +\r\n          response.message +\r\n          \"\\nTOKEN: \" +\r\n          getCookie(\"token\")\r\n      );\r\n    }\r\n  };\r\n\r\n  const cleanUpForms = () => {\r\n    setUsername(\"\");\r\n    setPassword(\"\");\r\n    setUsernameFailed(false);\r\n    setPasswordFailed(false);\r\n    setError(\"\");\r\n  };\r\n\r\n  return (\r\n    <Body darkMode={darkMode}>\r\n      <NightThemeButtonContainer>\r\n        <Text darkMode={darkMode}>Dark theme</Text>\r\n        <NightThemeButton\r\n          defaultChecked={darkMode}\r\n          onClick={() => {\r\n            setDarkMode(!darkMode);\r\n          }}\r\n        ></NightThemeButton>\r\n      </NightThemeButtonContainer>\r\n      <Content>\r\n        {!loggingIn && !registering && !loggedIn && (\r\n          <div>\r\n            <Information darkMode={darkMode}>\r\n              <Button\r\n                darkMode={darkMode}\r\n                onClick={() => {\r\n                  setLoggingIn(true);\r\n                }}\r\n              >\r\n                login\r\n              </Button>\r\n              <Button\r\n                darkMode={darkMode}\r\n                onClick={() => {\r\n                  setRegistering(true);\r\n                }}\r\n              >\r\n                register\r\n              </Button>\r\n            </Information>\r\n          </div>\r\n        )}\r\n        {loggingIn && (\r\n          <div>\r\n            <Information darkMode={darkMode}>\r\n              <InputAndTextContainer>\r\n                <Text darkMode={darkMode}>email/username:</Text>\r\n                <Input\r\n                  darkMode={darkMode}\r\n                  value={username}\r\n                  failed={usernameFailed}\r\n                  autoComplete=\"username\"\r\n                  onChange={(event) => setUsername(event.target.value)}\r\n                ></Input>\r\n              </InputAndTextContainer>\r\n              <InputAndTextContainer>\r\n                <Text darkMode={darkMode}>password:</Text>\r\n                <Input\r\n                  type=\"password\"\r\n                  darkMode={darkMode}\r\n                  value={password}\r\n                  failed={passwordFailed}\r\n                  autoComplete=\"password\"\r\n                  onChange={(event) => setPassword(event.target.value)}\r\n                ></Input>\r\n              </InputAndTextContainer>\r\n              <ErrorMessage>{error}</ErrorMessage>\r\n            </Information>\r\n            <Information darkMode={darkMode}>\r\n              <Button\r\n                darkMode={darkMode}\r\n                onClick={() => {\r\n                  setLoggingIn(false);\r\n                  cleanUpForms();\r\n                }}\r\n              >\r\n                back\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                darkMode={darkMode}\r\n                onClick={() => {\r\n                  login();\r\n                }}\r\n              >\r\n                login\r\n              </Button>\r\n            </Information>\r\n          </div>\r\n        )}\r\n        {registering && (\r\n          <div>\r\n            <Information darkMode={darkMode}>\r\n              <InputAndTextContainer>\r\n                <Text darkMode={darkMode}>email:</Text>\r\n                <Input\r\n                  darkMode={darkMode}\r\n                  value={email}\r\n                  failed={emailFailed}\r\n                  onChange={(event) => setEmail(event.target.value)}\r\n                ></Input>\r\n                <ErrorMessage>{emailError}</ErrorMessage>\r\n              </InputAndTextContainer>\r\n              <InputAndTextContainer>\r\n                <Text darkMode={darkMode}>username:</Text>\r\n                <Input\r\n                  darkMode={darkMode}\r\n                  value={username}\r\n                  onChange={(event) => setUsername(event.target.value)}\r\n                ></Input>\r\n              </InputAndTextContainer>\r\n              <InputAndTextContainer>\r\n                <Text darkMode={darkMode}>password:</Text>\r\n                <Input\r\n                  type=\"password\"\r\n                  darkMode={darkMode}\r\n                  value={password}\r\n                  onChange={(event) => setPassword(event.target.value)}\r\n                ></Input>\r\n              </InputAndTextContainer>\r\n              <InputAndTextContainer>\r\n                <Text darkMode={darkMode}>repeat password:</Text>\r\n                <Input\r\n                  type=\"password\"\r\n                  darkMode={darkMode}\r\n                  value={password2}\r\n                  onChange={(event) => setPassword2(event.target.value)}\r\n                ></Input>\r\n              </InputAndTextContainer>\r\n            </Information>\r\n            <Information darkMode={darkMode}>\r\n              <Button\r\n                darkMode={darkMode}\r\n                onClick={() => {\r\n                  setRegistering(false);\r\n                }}\r\n              >\r\n                back\r\n              </Button>\r\n              <Button\r\n                darkMode={darkMode}\r\n                onClick={() => {\r\n                  register();\r\n                }}\r\n              >\r\n                register\r\n              </Button>\r\n            </Information>\r\n          </div>\r\n        )}\r\n        {loggedIn && !addingList && (\r\n          <Information darkMode={darkMode}>\r\n            <AddButton\r\n              onClick={() => {\r\n                setAddingListItem(true);\r\n              }}\r\n            >\r\n              <AddButtonIcon\r\n                width=\"60\"\r\n                height=\"60\"\r\n                color={color(\"primary\", darkMode)}\r\n              ></AddButtonIcon>\r\n            </AddButton>\r\n            {lists &&\r\n              lists.map((list) => (\r\n                <Button key={list.listid}>{list.listname}</Button>\r\n              ))}\r\n          </Information>\r\n        )}\r\n        {loggedIn && addingList && (\r\n          <Information darkMode={darkMode}>\r\n            <InputAndTextContainer>\r\n              <Text darkMode={darkMode}>List name:</Text>\r\n              <Input\r\n                darkMode={darkMode}\r\n                value={newListName}\r\n                onChange={(event) => setNewListName(event.target.value)}\r\n              ></Input>\r\n              <Button\r\n                onClick={() => {\r\n                  addList();\r\n                }}\r\n              ></Button>\r\n            </InputAndTextContainer>\r\n          </Information>\r\n        )}\r\n      </Content>\r\n    </Body>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}