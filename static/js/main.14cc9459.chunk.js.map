{"version":3,"sources":["Library/Constants/Color.js","Library/Constants/Blocks.js","States/None/index.js","States/LoggingIn/index.js","Library/Scripts/Cookies.js","Library/Scripts/Api.js","Components/AddButton.js","App.js","serviceWorker.js","index.js"],"names":["Color","primary","primary2","background","background2","error","text","Information","styled","div","InputAndTextContainer","Input","input","Text","Button","button","ErrorMessage","None","updateSuperState","onClick","currentState","LoggingIn","states","State","handleKeyPress","login","placeholder","value","username","failed","usernameFailed","autoComplete","onChange","event","target","type","password","passwordFailed","onKeyPress","key","none","setCookie","name","days","expires","date","Date","setTime","getTime","toUTCString","document","cookie","getCookie","nameEQ","ca","split","i","length","c","charAt","substring","indexOf","deleteCookie","Api","this","basePath","token","refreshToken","ValidateToken","message","console","log","UseRefreshToken","method","url","data","requestUrl","Promise","resolve","reject","xhr","XMLHttpRequest","open","onload","response","onerror","status","statusText","setRequestHeader","send","JSON","stringify","GetResponse","parse","listName","listId","path","newName","itemId","itemName","itemDescription","emailOrUsername","includes","email","success","displayName","userName","userId","AddButton","width","height","color","xmlns","viewBox","d","fill","loggingIn","registering","loggedIn","Body","Content","LogoutButton","LogoutButtonContainer","RenamingList","ListContainer","ListButton","OpenContextMenuButton","ListContextMenu","ContextMenu","ListContextMenuItem","MenuItem","ThreeDots","p","App","useState","password2","emailFailed","emailError","addingList","newListName","renameId","renameName","setStates","lists","setLists","api","window","a","GetIsAuthorized","loadLists","Login","loginResponse","now","register","alert","CreateUser","result","addList","AddList","deleteList","DeleteList","GetUserLists","rename","RenameList","useEffect","getElementById","select","map","list","Fragment","listid","listname","id","onBlur","toString","x","clientX","y","clientY","showMenu","position","openContextMenu","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.14cc9459.chunk.js","sourcesContent":["const Color = {\n  primary: \"#374785\",\n  primary2: \"#40539e\",\n  background: \"#a8d0e6\",\n  background2: \"#ffffff\",\n  error: \"#ea0027\",\n  text: \"black\",\n};\nexport default Color;\n","import styled from \"styled-components\";\nimport Color from \"./Color\";\n\nexport const Information = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: ${Color.background};\n  margin: 0.5em 0;\n  padding: 1em;\n`;\n\nexport const InputAndTextContainer = styled.div`\n  margin: 0.25em 0;\n`;\n\nexport const Input = styled.input`\n  max-width: 20em;\n  width: 100%;\n  height: 3.5em;\n  padding: 18px 18px;\n  display: block;\n  border: 0px;\n  border-radius: 8px;\n  box-sizing: border-box;\n  color: #5f6670;\n  font-family: Rubik;\n  background-color: #f7f7f9;\n  text-align: center;\n  font-size: 1.2em;\n  resize: none;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 10px;\n`;\n\nexport const Text = styled.div`\n  color: ${Color.primary};\n  font-family: \"Open Sans\", sans-serif;\n  font-style: normal;\n  font-size: 1.5em;\n  margin-bottom: 0.5em;\n  margin-right: 0.5em;\n`;\n\nexport const Button = styled.button`\n  width: 100%;\n  display: inline-block;\n  text-align: center;\n  background-color: ${Color.primary};\n  color: #ffffff;\n  font-family: \"Rubik\", sans-serif;\n  font-weight: 400;\n  font-size: 1.1375rem;\n  margin-top: 9px;\n  padding: 18px;\n  border: none;\n  border-radius: 2.25rem;\n  :focus {\n    background-color: ${Color.primary2};\n  }\n  :hover {\n    background-color: ${Color.primary2};\n  }\n`;\n\nexport const ErrorMessage = styled.div`\n  color: ${Color.error};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Color from \"../../Library/Constants/Color\";\nimport { Information, Button } from \"../../Library/Constants/Blocks\";\n\nconst None = ({ updateSuperState }) => {\n  return (\n    <div>\n      <Information>\n        <Button\n          onClick={() => {\n            updateSuperState({ currentState: \"loggingIn\" });\n          }}\n        >\n          login\n        </Button>\n        <Button\n          onClick={() => {\n            updateSuperState({ currentState: \"registering\" });\n          }}\n        >\n          create account\n        </Button>\n      </Information>\n    </div>\n  );\n};\n\nexport default None;\n","import React from \"react\";\n\nimport {\n  Information,\n  Button,\n  InputAndTextContainer,\n  Input,\n  ErrorMessage,\n} from \"../../Library/Constants/Blocks\";\n\nconst LoggingIn = ({\n  states,\n  updateSuperState,\n  State,\n  handleKeyPress,\n  login,\n}) => {\n  return (\n    <div>\n      <Information>\n        <InputAndTextContainer>\n          <Input\n            placeholder=\"username/email\"\n            value={states.username}\n            failed={states.usernameFailed}\n            autoComplete=\"username\"\n            onChange={(event) =>\n              updateSuperState({ username: event.target.value })\n            }\n          ></Input>\n        </InputAndTextContainer>\n        <InputAndTextContainer>\n          <Input\n            placeholder=\"password\"\n            type=\"password\"\n            value={states.password}\n            failed={states.passwordFailed}\n            autoComplete=\"password\"\n            onChange={(event) =>\n              updateSuperState({ password: event.target.value })\n            }\n            onKeyPress={(event) => handleKeyPress(event.key)}\n          ></Input>\n        </InputAndTextContainer>\n        <ErrorMessage>{states.error}</ErrorMessage>\n      </Information>\n      <Information>\n        <Button\n          onClick={() => {\n            updateSuperState({\n              currentState: State.none,\n              username: \"\",\n              password: \"\",\n              usernameFailed: false,\n              passwordFailed: false,\n              error: \"\",\n            });\n          }}\n        >\n          back\n        </Button>\n        <Button\n          type=\"submit\"\n          onClick={() => {\n            login();\n          }}\n        >\n          login\n        </Button>\n      </Information>\n    </div>\n  );\n};\n\nexport default LoggingIn;\n","function setCookie(name, value, days) {\n  var expires = \"\";\n  if (days) {\n    var date = new Date();\n    date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n    expires = \"; expires=\" + date.toUTCString();\n  }\n  document.cookie = name + \"=\" + (value || \"\") + expires + \"; path=/\";\n}\nfunction getCookie(name) {\n  var nameEQ = name + \"=\";\n  var ca = document.cookie.split(\";\");\n  for (var i = 0; i < ca.length; i++) {\n    var c = ca[i];\n    while (c.charAt(0) === \" \") c = c.substring(1, c.length);\n    if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n  }\n  return null;\n}\nfunction deleteCookie(name) {\n  document.cookie = name + \"=; Max-Age=-99999999;\";\n}\n\nexport { setCookie, getCookie, deleteCookie };\n","import { getCookie } from \"./Cookies\";\nexport class Api {\n  constructor() {\n    this.basePath = \"https://warm-plateau-84344.herokuapp.com/\";\n    this.token = getCookie(\"token\");\n    this.refreshToken = getCookie(\"refreshToken\");\n  }\n\n  async GetIsAuthorized() {\n    try {\n      if (this.token) {\n        if ((await this.ValidateToken()).message) {\n          return true;\n        } else {\n          console.log(\"Refresh token has been used\");\n          console.log(await this.UseRefreshToken());\n          return false;\n        }\n      } else {\n        return false;\n      }\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  async GetResponse(method, url, data = null) {\n    this.token = getCookie(\"token\");\n    var requestUrl = this.basePath + url;\n    var token = this.token;\n    return new Promise(function (resolve, reject) {\n      let xhr = new XMLHttpRequest();\n      xhr.open(method, requestUrl);\n      xhr.onload = function () {\n        resolve(xhr.response);\n      };\n      xhr.onerror = function () {\n        reject({\n          status: this.status,\n          statusText: xhr.statusText,\n        });\n      };\n      if (token) {\n        xhr.setRequestHeader(\"Authorization\", \"bearer \" + token);\n      }\n      if (data != null) {\n        xhr.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\n        xhr.send(JSON.stringify(data));\n      } else {\n        xhr.send();\n      }\n    });\n  }\n\n  async GetUserLists() {\n    var path = \"user/lists\";\n    return JSON.parse(await this.GetResponse(\"GET\", path));\n  }\n  async AddList(listName) {\n    var path = \"user/lists\";\n    return JSON.parse(\n      await this.GetResponse(\"POST\", path, {\n        listName: listName,\n      })\n    );\n  }\n  async DeleteList(listId) {\n    var path = \"list/remove?listId=\" + listId;\n    return JSON.parse(await this.GetResponse(\"DELETE\", path));\n  }\n  async RenameList(listId, newName) {\n    var path = \"list/rename\";\n    return JSON.parse(\n      await this.GetResponse(\"POST\", path, {\n        listId: listId,\n        newName: newName,\n      })\n    );\n  }\n  async CloneList(listId, newName) {\n    var path = \"list/clone\";\n    return JSON.parse(\n      await this.GetResponse(\"POST\", path, {\n        listId: listId,\n        newName: newName,\n      })\n    );\n  }\n  async GetListContent(listId) {\n    var path = \"listitems?listId=\" + listId;\n    return JSON.parse(await this.GetResponse(\"GET\", path));\n  }\n\n  async ValidateToken() {\n    var path = \"token/validate\";\n    return JSON.parse(await this.GetResponse(\"GET\", path));\n  }\n\n  async UseRefreshToken() {\n    var path = \"user/token/refresh\";\n    return JSON.parse(\n      await this.GetResponse(\"POST\", path, { refreshToken: this.refreshToken })\n    );\n  }\n\n  async DeleteListItem(listId, itemId) {\n    var path = \"listitems?listId=\" + listId + \"&itemId=\" + itemId;\n    return JSON.parse(await this.GetResponse(\"DELETE\", path));\n  }\n\n  async AddListItem(listId, itemName, itemDescription) {\n    var path = \"listitems\";\n    return JSON.parse(\n      await this.GetResponse(\"POST\", path, {\n        listId: listId,\n        itemName: itemName,\n        itemDescription: itemDescription,\n      })\n    );\n  }\n\n  async Login(emailOrUsername, password) {\n    try {\n      var data = null;\n\n      if (emailOrUsername.includes(\"@\")) {\n        data = { email: emailOrUsername, username: \"\", password: password };\n      } else {\n        data = { email: \"\", username: emailOrUsername, password: password };\n      }\n\n      var path = \"user/token\";\n      return JSON.parse(await this.GetResponse(\"POST\", path, data));\n    } catch (e) {\n      return {\n        success: false,\n        message: \"Unknown communication error when trying to perform login\",\n      };\n    }\n  }\n\n  async CreateUser(email, username, displayName, password) {\n    var path = \"user/create\";\n    var data = {\n      email: email,\n      username: username,\n      displayName: displayName,\n      password: password,\n    };\n\n    return JSON.parse(await this.GetResponse(\"POST\", path, data));\n  }\n\n  async GetUserIdByUserName(userName) {\n    var path = \"userid/?userName=\" + userName;\n\n    return JSON.parse(await this.GetResponse(\"GET\", path));\n  }\n\n  async ShareList(listId, userId) {\n    var path = \"list/share\";\n    var data = { listId: listId, userId: userId };\n\n    return JSON.parse(await this.GetResponse(\"POST\", path, data));\n  }\n}\n\nexport default Api;\n","import React from \"react\";\n\nconst AddButton = ({ width, height, color }) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width}\n      height={height}\n      viewBox=\"0 0 20 20\"\n    >\n      <title>add</title>\n      <path d=\"M16 9h-5V4H9v5H4v2h5v5h2v-5h5V9z\" fill={color} />\n    </svg>\n  );\n};\nexport default AddButton;\n","//components\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { ContextMenu, MenuItem, ContextMenuTrigger } from \"react-contextmenu\";\nimport { showMenu } from \"react-contextmenu/modules/actions\";\n\n//states\nimport None from \"./States/None\";\nimport LoggingIn from \"./States/LoggingIn\";\n\n//books from the library\nimport Color from \"./Library/Constants/Color\";\nimport Api from \"./Library/Scripts/Api\";\nimport { setCookie, getCookie, deleteCookie } from \"./Library/Scripts/Cookies\";\nimport {\n  Information,\n  InputAndTextContainer,\n  Input,\n  Text,\n  Button,\n  ErrorMessage,\n} from \"./Library/Constants/Blocks\";\n\n//components\nimport AddButtonIcon from \"./Components/AddButton\";\n\nconst State = {\n  none: \"none\",\n  loggingIn: \"loggingIn\",\n  registering: \"registering\",\n  loggedIn: \"loggedIn\",\n};\n\nconst Body = styled.div`\n  display: flex;\n  flex: 1;\n  min-height: 100vh;\n  background-color: ${Color.background};\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Content = styled.div`\n  display: flex;\n`;\n\nconst LogoutButton = styled(Button)`\n  font-size: 1em;\n`;\n\nconst LogoutButtonContainer = styled.div`\n  display: flex;\n  position: absolute;\n  top: 1em;\n  left: 1em;\n  flex-direction: row;\n`;\n\nconst AddButton = styled.button`\n  display: flex;\n  align-self: center;\n  padding: 0;\n  border: 0;\n  border-radius: 5px;\n`;\n\nconst RenamingList = styled.input`\n  width: 100%;\n  display: inline-block;\n  text-align: center;\n  background-color: ${Color.primary};\n  color: #ffffff;\n  font-family: \"Open Sans\", sans-serif;\n  font-style: normal;\n  font-size: 1.5em;\n  margin: 0.25em 0;\n  padding: 0.5em 0;\n  border: none;\n  border-radius: 3px;\n`;\n\nconst ListContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst ListButton = styled(Button)`\n  border-top-right-radius: 0;\n  border-bottom-right-radius: 0;\n`;\n\nconst OpenContextMenuButton = styled(Button)`\n  display: flex;\n  width: 10%;\n  border-top-left-radius: 0;\n  border-bottom-left-radius: 0;\n  padding: 0;\n`;\n\nconst ListContextMenu = styled(ContextMenu)`\n  background-color: ${Color.background};\n  box-shadow: 0px 0px 6px 0px rgba(0, 0, 0, 0.75);\n`;\n\nconst ListContextMenuItem = styled(MenuItem)`\n  padding: 1em;\n  user-select: none;\n  cursor: pointer;\n  :hover {\n    background-color: ${Color.primary2};\n  }\n  :focus {\n    outline: none;\n  }\n`;\n\nconst ThreeDots = styled.p`\n  transform: rotate(90deg);\n  white-space: nowrap;\n  display: block;\n  margin: 0;\n  padding: 0.5em;\n`;\n\nconst App = () => {\n  //#region SuperState\n  const [states, setStates] = useState({\n    currentState: State.none,\n    username: \"\",\n    usernameFailed: false,\n    password: \"\",\n    passwordFailed: false,\n    password2: \"\",\n    email: \"\",\n    emailFailed: false,\n    error: \"\",\n    emailError: \"\",\n    addingList: false,\n    newListName: \"\",\n    renameId: null,\n    renameName: \"\",\n  });\n  function updateSuperState({\n    currentState = states.currentState,\n    username = states.username,\n    usernameFailed = states.usernameFailed,\n    password = states.password,\n    passwordFailed = states.passwordFailed,\n    password2 = states.password2,\n    email = states.email,\n    emailFailed = states.emailFailed,\n    error = states.error,\n    emailError = states.emailError,\n    addingList = states.addingList,\n    newListName = states.newListName,\n    renameId = states.renameId,\n    renameName = states.renameName,\n  } = {}) {\n    setStates({\n      currentState: currentState,\n      username: username,\n      usernameFailed: usernameFailed,\n      password: password,\n      passwordFailed: passwordFailed,\n      password2: password2,\n      email: email,\n      emailFailed: emailFailed,\n      error: error,\n      emailError: emailError,\n      addingList: addingList,\n      newListName: newListName,\n      renameId: renameId,\n      renameName: renameName,\n    });\n  }\n  //#endregion\n  const [lists, setLists] = useState(null);\n  const [api] = useState(new Api());\n  window.onload = async function () {\n    if (await api.GetIsAuthorized()) {\n      await loadLists();\n      updateSuperState({ currentState: State.loggedIn });\n    }\n  };\n  const login = async () => {\n    var loginResponse = await api.Login(states.username, states.password);\n    if (loginResponse.success) {\n      setCookie(\"token\", loginResponse.token, 100);\n      setCookie(\"tokenDate\", Date.now(), 100);\n      setCookie(\"refreshToken\", loginResponse.refreshToken, 100);\n      await loadLists();\n      updateSuperState({ currentState: State.loggedIn });\n    } else {\n      updateSuperState({\n        usernameFailed: true,\n        passwordFailed: true,\n        error: loginResponse.message,\n      });\n    }\n  };\n  const register = async () => {\n    if (states.password !== states.password2) {\n      alert(\"Passwords don't match\");\n    }\n    if (!states.email.includes(\"@\") || !states.email.includes(\".\")) {\n      updateSuperState({\n        emailError: \"That doesn't look like a valid email address\",\n        emailFailed: true,\n      });\n      return;\n    }\n    var result = await api.CreateUser(\n      states.email,\n      states.username,\n      states.username,\n      states.password\n    );\n\n    if (!result.success) {\n      alert(result.message);\n      return;\n    } else {\n      alert(\"successfully created user\");\n    }\n  };\n  const addList = async () => {\n    var result = await api.AddList(states.newListName);\n    if (!result.success) {\n      alert(result.message);\n      return;\n    } else {\n      updateSuperState({ newListName: \"\", addingList: false });\n      loadLists();\n    }\n  };\n  const deleteList = async (listId) => {\n    var result = await api.DeleteList(listId);\n    if (!result.success) {\n      alert(result.message);\n    }\n    loadLists();\n  };\n  const cloneList = async (listId, listName) => {\n    var result = await api.CloneList(listId, listName);\n    if (!result.success) {\n      alert(result.message);\n    }\n    loadLists();\n  };\n  const loadLists = async () => {\n    var response = await api.GetUserLists();\n    if (response.success) {\n      setLists(response.message);\n    } else {\n      alert(\n        \"Fel när listor skölle laddas: \" +\n          response.message +\n          \"\\nTOKEN: \" +\n          getCookie(\"token\")\n      );\n    }\n  };\n\n  const logout = () => {\n    updateSuperState({ currentState: State.none });\n    deleteCookie(\"token\");\n    deleteCookie(\"tokenDate\");\n    deleteCookie(\"refreshToken\");\n  };\n\n  const rename = async () => {\n    var result = await api.RenameList(states.renameId, states.renameName);\n    if (!result.success) {\n      alert(result.message);\n    }\n    await loadLists();\n    updateSuperState({ renameId: null });\n  };\n\n  const startRenaming = (listId, listName) => {\n    updateSuperState({ renameName: listName, renameId: listId });\n  };\n\n  const handleKeyPress = (key) => {\n    if (key === \"Enter\") {\n      if (states.currentState === State.loggingIn) {\n        login();\n      }\n      if (states.currentState === State.registering) {\n        register();\n      }\n    }\n  };\n\n  const openContextMenu = (event, id) => {\n    const x = event.clientX;\n    const y = event.clientY;\n    console.log(x, y, event);\n    showMenu({\n      position: { x, y },\n      target: event.target,\n      id: id,\n    });\n  };\n\n  useEffect(() => {\n    if (states.renameId) {\n      document.getElementById(states.renameId).select();\n    }\n  }, [states.renameId]);\n\n  return (\n    <Body>\n      {states.currentState === State.loggedIn && (\n        <LogoutButtonContainer>\n          <LogoutButton onClick={logout}>sign out</LogoutButton>\n        </LogoutButtonContainer>\n      )}\n      <Content>\n        {states.currentState === State.none && (\n          <None updateSuperState={updateSuperState} />\n        )}\n        {states.currentState === State.loggingIn && (\n          <LoggingIn\n            states={states}\n            updateSuperState={updateSuperState}\n            State={State}\n            handleKeyPress={handleKeyPress}\n            login={login}\n          />\n        )}\n        {states.currentState === State.registering && (\n          <div>\n            <Information>\n              <InputAndTextContainer>\n                <Text>email:</Text>\n                <Input\n                  value={states.email}\n                  failed={states.emailFailed}\n                  onChange={(event) =>\n                    updateSuperState({ email: event.target.value })\n                  }\n                ></Input>\n                <ErrorMessage>{states.emailError}</ErrorMessage>\n              </InputAndTextContainer>\n              <InputAndTextContainer>\n                <Text>username:</Text>\n                <Input\n                  value={states.username}\n                  onChange={(event) =>\n                    updateSuperState({ username: event.target.value })\n                  }\n                ></Input>\n              </InputAndTextContainer>\n              <InputAndTextContainer>\n                <Text>password:</Text>\n                <Input\n                  type=\"password\"\n                  value={states.password}\n                  onChange={(event) =>\n                    updateSuperState({ password: event.target.value })\n                  }\n                ></Input>\n              </InputAndTextContainer>\n              <InputAndTextContainer>\n                <Text>repeat password:</Text>\n                <Input\n                  type=\"password\"\n                  value={states.password2}\n                  onChange={(event) =>\n                    updateSuperState({ password2: event.target.value })\n                  }\n                  onKeyPress={(event) => handleKeyPress(event.key)}\n                ></Input>\n              </InputAndTextContainer>\n            </Information>\n            <Information>\n              <Button\n                onClick={() => {\n                  updateSuperState({ currentState: State.none });\n                }}\n              >\n                back\n              </Button>\n              <Button\n                onClick={() => {\n                  register();\n                }}\n              >\n                register\n              </Button>\n            </Information>\n          </div>\n        )}\n        {states.currentState === State.loggedIn && (\n          <>\n            {!states.addingList && (\n              <Information>\n                {lists.length > 1 &&\n                  lists.map((list) => (\n                    <React.Fragment\n                      key={`addinglist mapping ${list.listid}+${list.listname}`}\n                    >\n                      {states.renameId === list.listid && (\n                        <RenamingList\n                          id={states.renameId}\n                          value={states.renameName}\n                          onChange={(event) =>\n                            updateSuperState({ renameName: event.target.value })\n                          }\n                          onKeyPress={(event) => handleKeyPress(event.key)}\n                          onBlur={rename}\n                        ></RenamingList>\n                      )}\n                      {states.renameId !== list.listid && (\n                        <ContextMenuTrigger\n                          key={list.listid}\n                          id={list.listid.toString()}\n                        >\n                          <ListContainer>\n                            <ListButton>{list.listname}</ListButton>\n                            <OpenContextMenuButton\n                              onClick={(event) =>\n                                openContextMenu(event, list.listid.toString())\n                              }\n                            >\n                              <ThreeDots>...</ThreeDots>\n                            </OpenContextMenuButton>\n                          </ListContainer>\n                          <ListContextMenu id={list.listid.toString()}>\n                            <ListContextMenuItem\n                              onClick={() =>\n                                startRenaming(list.listid, list.listname)\n                              }\n                            >\n                              Rename\n                            </ListContextMenuItem>\n                            <ListContextMenuItem\n                              onClick={() => deleteList(list.listid)}\n                            >\n                              Delete\n                            </ListContextMenuItem>\n                          </ListContextMenu>\n                        </ContextMenuTrigger>\n                      )}\n                    </React.Fragment>\n                  ))}\n                <AddButton\n                  onClick={() => {\n                    updateSuperState({ addingList: true });\n                  }}\n                >\n                  <AddButtonIcon\n                    width=\"60\"\n                    height=\"60\"\n                    color={Color.primary}\n                  ></AddButtonIcon>\n                </AddButton>\n              </Information>\n            )}\n            {states.addingList && (\n              <Information>\n                <InputAndTextContainer>\n                  <Text>List name:</Text>\n                  <Input\n                    value={states.newListName}\n                    onChange={(event) =>\n                      updateSuperState({ newListName: event.target.value })\n                    }\n                  ></Input>\n                  <Button\n                    onClick={() => {\n                      addList();\n                    }}\n                  >\n                    add\n                  </Button>\n                </InputAndTextContainer>\n              </Information>\n            )}\n          </>\n        )}\n      </Content>\n    </Body>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}